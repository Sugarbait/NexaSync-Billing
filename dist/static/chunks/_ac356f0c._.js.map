{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Card.tsx"],"sourcesContent":["import React from 'react'\n\ninterface CardProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function Card({ children, className = '' }: CardProps) {\n  return (\n    <div className={`bg-gray-100 dark:bg-gray-800 rounded-lg shadow-sm border border-gray-300 dark:border-gray-700 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardHeader({ children, className = '' }: CardHeaderProps) {\n  return (\n    <div className={`px-6 py-4 border-b border-gray-200 dark:border-gray-700 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardTitle({ children, className = '' }: CardTitleProps) {\n  return (\n    <h3 className={`text-lg font-bold gradient-text ${className}`}>\n      {children}\n    </h3>\n  )\n}\n\ninterface CardContentProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardContent({ children, className = '' }: CardContentProps) {\n  return (\n    <div className={`px-6 py-4 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardFooter({ children, className = '' }: CardFooterProps) {\n  return (\n    <div className={`px-6 py-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 rounded-b-lg ${className}`}>\n      {children}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAOO,SAAS,KAAK,KAAuC;QAAvC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAa,GAAvC;IACnB,qBACE,6LAAC;QAAI,WAAW,AAAC,iGAA0G,OAAV;kBAC9G;;;;;;AAGP;KANgB;AAaT,SAAS,WAAW,KAA6C;QAA7C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAmB,GAA7C;IACzB,qBACE,6LAAC;QAAI,WAAW,AAAC,2DAAoE,OAAV;kBACxE;;;;;;AAGP;MANgB;AAaT,SAAS,UAAU,KAA4C;QAA5C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAkB,GAA5C;IACxB,qBACE,6LAAC;QAAG,WAAW,AAAC,mCAA4C,OAAV;kBAC/C;;;;;;AAGP;MANgB;AAaT,SAAS,YAAY,KAA8C;QAA9C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAoB,GAA9C;IAC1B,qBACE,6LAAC;QAAI,WAAW,AAAC,aAAsB,OAAV;kBAC1B;;;;;;AAGP;MANgB;AAaT,SAAS,WAAW,KAA6C;QAA7C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAmB,GAA7C;IACzB,qBACE,6LAAC;QAAI,WAAW,AAAC,oGAA6G,OAAV;kBACjH;;;;;;AAGP;MANgB","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Button.tsx"],"sourcesContent":["import React from 'react'\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger' | 'ghost'\n  size?: 'sm' | 'md' | 'lg'\n  loading?: boolean\n  children: React.ReactNode\n}\n\nexport function Button({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  disabled,\n  children,\n  className = '',\n  ...props\n}: ButtonProps) {\n  const baseStyles = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2'\n\n  const variants = {\n    primary: 'bg-blue-600 dark:bg-blue-500 text-white hover:bg-blue-700 dark:hover:bg-blue-600 focus:ring-blue-500 disabled:bg-blue-300 dark:disabled:bg-blue-800',\n    secondary: 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-gray-600 focus:ring-gray-500 disabled:bg-gray-100 dark:disabled:bg-gray-800',\n    danger: 'bg-red-600 dark:bg-red-500 text-white hover:bg-red-700 dark:hover:bg-red-600 focus:ring-red-500 disabled:bg-red-300 dark:disabled:bg-red-800',\n    ghost: 'bg-transparent text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:ring-gray-500'\n  }\n\n  const sizes = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  }\n\n  return (\n    <button\n      className={`${baseStyles} ${variants[variant]} ${sizes[size]} ${className} ${\n        (disabled || loading) ? 'cursor-not-allowed opacity-50' : ''\n      }`}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && (\n        <svg\n          className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      )}\n      {children}\n    </button>\n  )\n}\n"],"names":[],"mappings":";;;;;;AASO,SAAS,OAAO,KAQT;QARS,EACrB,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,QAAQ,EACR,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACS,GARS;IASrB,MAAM,aAAa;IAEnB,MAAM,WAAW;QACf,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;IACT;IAEA,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,6LAAC;QACC,WAAW,AAAC,GAAgB,OAAd,YAAW,KAAwB,OAArB,QAAQ,CAAC,QAAQ,EAAC,KAAkB,OAAf,KAAK,CAAC,KAAK,EAAC,KAC3D,OAD8D,WAAU,KAEzE,OADC,AAAC,YAAY,UAAW,kCAAkC;QAE5D,UAAU,YAAY;QACrB,GAAG,KAAK;;YAER,yBACC,6LAAC;gBACC,WAAU;gBACV,OAAM;gBACN,MAAK;gBACL,SAAQ;;kCAER,6LAAC;wBACC,WAAU;wBACV,IAAG;wBACH,IAAG;wBACH,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,GAAE;;;;;;;;;;;;YAIP;;;;;;;AAGP;KAzDgB","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Badge.tsx"],"sourcesContent":["import React from 'react'\n\ninterface BadgeProps {\n  children: React.ReactNode\n  color?: 'gray' | 'blue' | 'green' | 'red' | 'yellow'\n  className?: string\n}\n\nexport function Badge({ children, color = 'gray', className = '' }: BadgeProps) {\n  const colors = {\n    gray: 'bg-gray-100 text-gray-800',\n    blue: 'bg-blue-100 text-blue-800',\n    green: 'bg-green-100 text-green-800',\n    red: 'bg-red-100 text-red-800',\n    yellow: 'bg-yellow-100 text-yellow-800'\n  }\n\n  return (\n    <span\n      className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colors[color]} ${className}`}\n    >\n      {children}\n    </span>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAQO,SAAS,MAAM,KAAwD;QAAxD,EAAE,QAAQ,EAAE,QAAQ,MAAM,EAAE,YAAY,EAAE,EAAc,GAAxD;IACpB,MAAM,SAAS;QACb,MAAM;QACN,MAAM;QACN,OAAO;QACP,KAAK;QACL,QAAQ;IACV;IAEA,qBACE,6LAAC;QACC,WAAW,AAAC,2EAA2F,OAAjB,MAAM,CAAC,MAAM,EAAC,KAAa,OAAV;kBAEtG;;;;;;AAGP;KAhBgB","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Input.tsx"],"sourcesContent":["import React from 'react'\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  helpText?: string // Add support for helpText (alias for helperText)\n}\n\nexport function Input({\n  label,\n  error,\n  helperText,\n  helpText,\n  className = '',\n  ...props\n}: InputProps) {\n  // Use either helperText or helpText\n  const helper = helperText || helpText\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <input\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helper && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helper}</p>\n      )}\n    </div>\n  )\n}\n\ninterface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  label?: string\n  error?: string\n  helperText?: string\n}\n\nexport function Textarea({\n  label,\n  error,\n  helperText,\n  className = '',\n  ...props\n}: TextareaProps) {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <textarea\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helperText}</p>\n      )}\n    </div>\n  )\n}\n\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  options: Array<{ value: string | number; label: string }>\n}\n\nexport function Select({\n  label,\n  error,\n  helperText,\n  options,\n  className = '',\n  ...props\n}: SelectProps) {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <select\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      >\n        {options.map(option => (\n          <option key={option.value} value={option.value} className=\"bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\">\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helperText}</p>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;AASO,SAAS,MAAM,KAOT;QAPS,EACpB,KAAK,EACL,KAAK,EACL,UAAU,EACV,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACQ,GAPS;IAQpB,oCAAoC;IACpC,MAAM,SAAS,cAAc;IAE7B,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;;;;;;YAEV,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,UAAU,CAAC,uBACV,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;KAhCgB;AAwCT,SAAS,SAAS,KAMT;QANS,EACvB,KAAK,EACL,KAAK,EACL,UAAU,EACV,YAAY,EAAE,EACd,GAAG,OACW,GANS;IAOvB,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;;;;;;YAEV,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,cAAc,CAAC,uBACd,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;MA5BgB;AAqCT,SAAS,OAAO,KAOT;QAPS,EACrB,KAAK,EACL,KAAK,EACL,UAAU,EACV,OAAO,EACP,YAAY,EAAE,EACd,GAAG,OACS,GAPS;IAQrB,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;0BAER,QAAQ,GAAG,CAAC,CAAA,uBACX,6LAAC;wBAA0B,OAAO,OAAO,KAAK;wBAAE,WAAU;kCACvD,OAAO,KAAK;uBADF,OAAO,KAAK;;;;;;;;;;YAK5B,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,cAAc,CAAC,uBACd,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;MAnCgB","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/ParticleBackground.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useRef } from 'react'\n\nexport function ParticleBackground() {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (!canvas) return\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    // Set canvas size to match parent container with high DPI support\n    const resizeCanvas = () => {\n      const parent = canvas.parentElement\n      if (parent) {\n        const dpr = window.devicePixelRatio || 1\n        const rect = parent.getBoundingClientRect()\n\n        // Set display size\n        canvas.style.width = rect.width + 'px'\n        canvas.style.height = rect.height + 'px'\n\n        // Set actual canvas size (accounting for device pixel ratio)\n        canvas.width = rect.width * dpr\n        canvas.height = rect.height * dpr\n\n        // Scale context to match device pixel ratio\n        ctx.scale(dpr, dpr)\n      }\n    }\n    resizeCanvas()\n    window.addEventListener('resize', resizeCanvas)\n\n    // Animated waves\n    let time = 0\n\n    // Animation loop\n    let animationFrameId: number\n\n    const animate = () => {\n      const parent = canvas.parentElement\n      if (!parent) return\n\n      const rect = parent.getBoundingClientRect()\n      ctx.clearRect(0, 0, rect.width, rect.height)\n\n      time += 0.01\n\n      // Draw multiple wave layers\n      const waves = [\n        { amplitude: 30, frequency: 0.015, speed: 0.5, opacity: 0.15, offset: 0 },\n        { amplitude: 25, frequency: 0.02, speed: 0.3, opacity: 0.1, offset: 50 },\n        { amplitude: 20, frequency: 0.025, speed: 0.4, opacity: 0.12, offset: 100 }\n      ]\n\n      waves.forEach((wave, index) => {\n        ctx.beginPath()\n        ctx.moveTo(0, rect.height / 2)\n\n        // Draw smooth wave\n        for (let x = 0; x <= rect.width; x += 2) {\n          const y = rect.height / 2 +\n            Math.sin((x * wave.frequency) + (time * wave.speed)) * wave.amplitude +\n            Math.sin((x * wave.frequency * 0.5) + (time * wave.speed * 1.5)) * (wave.amplitude * 0.5)\n\n          if (x === 0) {\n            ctx.moveTo(x, y)\n          } else {\n            ctx.lineTo(x, y)\n          }\n        }\n\n        // Complete the shape\n        ctx.lineTo(rect.width, rect.height)\n        ctx.lineTo(0, rect.height)\n        ctx.closePath()\n\n        // Fill with gradient\n        const gradient = ctx.createLinearGradient(0, 0, 0, rect.height)\n        gradient.addColorStop(0, `rgba(255, 255, 255, ${wave.opacity})`)\n        gradient.addColorStop(1, `rgba(255, 255, 255, 0)`)\n\n        ctx.fillStyle = gradient\n        ctx.fill()\n      })\n\n      // Add floating circles\n      const circles = 12\n      for (let i = 0; i < circles; i++) {\n        const x = (rect.width / circles) * i + (Math.sin(time * 0.5 + i) * 30)\n        const y = rect.height / 2 + (Math.sin(time * 0.3 + i * 0.5) * 40)\n        const radius = 3 + Math.sin(time + i) * 1.5\n\n        ctx.beginPath()\n        ctx.arc(x, y, radius, 0, Math.PI * 2)\n        ctx.fillStyle = `rgba(255, 255, 255, ${0.3 + Math.sin(time + i) * 0.1})`\n        ctx.fill()\n      }\n\n      animationFrameId = requestAnimationFrame(animate)\n    }\n\n    animate()\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas)\n      cancelAnimationFrame(animationFrameId)\n    }\n  }, [])\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"absolute top-0 left-0 w-full h-full pointer-events-none z-0 opacity-60\"\n      style={{ mixBlendMode: 'screen' }}\n    />\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAIO,SAAS;;IACd,MAAM,YAAY,IAAA,uKAAM,EAAoB;IAE5C,IAAA,0KAAS;wCAAC;YACR,MAAM,SAAS,UAAU,OAAO;YAChC,IAAI,CAAC,QAAQ;YAEb,MAAM,MAAM,OAAO,UAAU,CAAC;YAC9B,IAAI,CAAC,KAAK;YAEV,kEAAkE;YAClE,MAAM;6DAAe;oBACnB,MAAM,SAAS,OAAO,aAAa;oBACnC,IAAI,QAAQ;wBACV,MAAM,MAAM,OAAO,gBAAgB,IAAI;wBACvC,MAAM,OAAO,OAAO,qBAAqB;wBAEzC,mBAAmB;wBACnB,OAAO,KAAK,CAAC,KAAK,GAAG,KAAK,KAAK,GAAG;wBAClC,OAAO,KAAK,CAAC,MAAM,GAAG,KAAK,MAAM,GAAG;wBAEpC,6DAA6D;wBAC7D,OAAO,KAAK,GAAG,KAAK,KAAK,GAAG;wBAC5B,OAAO,MAAM,GAAG,KAAK,MAAM,GAAG;wBAE9B,4CAA4C;wBAC5C,IAAI,KAAK,CAAC,KAAK;oBACjB;gBACF;;YACA;YACA,OAAO,gBAAgB,CAAC,UAAU;YAElC,iBAAiB;YACjB,IAAI,OAAO;YAEX,iBAAiB;YACjB,IAAI;YAEJ,MAAM;wDAAU;oBACd,MAAM,SAAS,OAAO,aAAa;oBACnC,IAAI,CAAC,QAAQ;oBAEb,MAAM,OAAO,OAAO,qBAAqB;oBACzC,IAAI,SAAS,CAAC,GAAG,GAAG,KAAK,KAAK,EAAE,KAAK,MAAM;oBAE3C,QAAQ;oBAER,4BAA4B;oBAC5B,MAAM,QAAQ;wBACZ;4BAAE,WAAW;4BAAI,WAAW;4BAAO,OAAO;4BAAK,SAAS;4BAAM,QAAQ;wBAAE;wBACxE;4BAAE,WAAW;4BAAI,WAAW;4BAAM,OAAO;4BAAK,SAAS;4BAAK,QAAQ;wBAAG;wBACvE;4BAAE,WAAW;4BAAI,WAAW;4BAAO,OAAO;4BAAK,SAAS;4BAAM,QAAQ;wBAAI;qBAC3E;oBAED,MAAM,OAAO;gEAAC,CAAC,MAAM;4BACnB,IAAI,SAAS;4BACb,IAAI,MAAM,CAAC,GAAG,KAAK,MAAM,GAAG;4BAE5B,mBAAmB;4BACnB,IAAK,IAAI,IAAI,GAAG,KAAK,KAAK,KAAK,EAAE,KAAK,EAAG;gCACvC,MAAM,IAAI,KAAK,MAAM,GAAG,IACtB,KAAK,GAAG,CAAC,AAAC,IAAI,KAAK,SAAS,GAAK,OAAO,KAAK,KAAK,IAAK,KAAK,SAAS,GACrE,KAAK,GAAG,CAAC,AAAC,IAAI,KAAK,SAAS,GAAG,MAAQ,OAAO,KAAK,KAAK,GAAG,OAAQ,CAAC,KAAK,SAAS,GAAG,GAAG;gCAE1F,IAAI,MAAM,GAAG;oCACX,IAAI,MAAM,CAAC,GAAG;gCAChB,OAAO;oCACL,IAAI,MAAM,CAAC,GAAG;gCAChB;4BACF;4BAEA,qBAAqB;4BACrB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,KAAK,MAAM;4BAClC,IAAI,MAAM,CAAC,GAAG,KAAK,MAAM;4BACzB,IAAI,SAAS;4BAEb,qBAAqB;4BACrB,MAAM,WAAW,IAAI,oBAAoB,CAAC,GAAG,GAAG,GAAG,KAAK,MAAM;4BAC9D,SAAS,YAAY,CAAC,GAAG,AAAC,uBAAmC,OAAb,KAAK,OAAO,EAAC;4BAC7D,SAAS,YAAY,CAAC,GAAI;4BAE1B,IAAI,SAAS,GAAG;4BAChB,IAAI,IAAI;wBACV;;oBAEA,uBAAuB;oBACvB,MAAM,UAAU;oBAChB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAAK;wBAChC,MAAM,IAAI,AAAC,KAAK,KAAK,GAAG,UAAW,IAAK,KAAK,GAAG,CAAC,OAAO,MAAM,KAAK;wBACnE,MAAM,IAAI,KAAK,MAAM,GAAG,IAAK,KAAK,GAAG,CAAC,OAAO,MAAM,IAAI,OAAO;wBAC9D,MAAM,SAAS,IAAI,KAAK,GAAG,CAAC,OAAO,KAAK;wBAExC,IAAI,SAAS;wBACb,IAAI,GAAG,CAAC,GAAG,GAAG,QAAQ,GAAG,KAAK,EAAE,GAAG;wBACnC,IAAI,SAAS,GAAG,AAAC,uBAAqD,OAA/B,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,KAAI;wBACtE,IAAI,IAAI;oBACV;oBAEA,mBAAmB,sBAAsB;gBAC3C;;YAEA;YAEA;gDAAO;oBACL,OAAO,mBAAmB,CAAC,UAAU;oBACrC,qBAAqB;gBACvB;;QACF;uCAAG,EAAE;IAEL,qBACE,6LAAC;QACC,KAAK;QACL,WAAU;QACV,OAAO;YAAE,cAAc;QAAS;;;;;;AAGtC;GApHgB;KAAA","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/lib/utils/format.ts"],"sourcesContent":["/**\n * Format a number as CAD currency\n */\nexport function formatCAD(amount: number | null | undefined): string {\n  if (amount === null || amount === undefined || isNaN(amount)) return '$0.00'\n  return new Intl.NumberFormat('en-CA', {\n    style: 'currency',\n    currency: 'CAD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount)\n}\n\n/**\n * Format a date\n */\nexport function formatDate(date: string | Date | null | undefined): string {\n  if (!date) return 'N/A'\n  const d = typeof date === 'string' ? new Date(date) : date\n  if (isNaN(d.getTime())) return 'Invalid Date'\n  return new Intl.DateTimeFormat('en-CA', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).format(d)\n}\n\n/**\n * Format a date range\n */\nexport function formatDateRange(range: { start: Date | string; end: Date | string }): string {\n  return `${formatDate(range.start)} - ${formatDate(range.end)}`\n}\n\n/**\n * Format a number with commas\n */\nexport function formatNumber(num: number): string {\n  return new Intl.NumberFormat('en-US').format(num)\n}\n\n/**\n * Get date suffix (1st, 2nd, 3rd, etc.)\n */\nexport function getDaySuffix(day: number): string {\n  if (day >= 11 && day <= 13) return 'th'\n\n  switch (day % 10) {\n    case 1: return 'st'\n    case 2: return 'nd'\n    case 3: return 'rd'\n    default: return 'th'\n  }\n}\n\n/**\n * Get previous month date range\n */\nexport function getPreviousMonthRange(): { start: Date; end: Date } {\n  const now = new Date()\n  const start = new Date(now.getFullYear(), now.getMonth() - 1, 1)\n  const end = new Date(now.getFullYear(), now.getMonth(), 0)\n  return { start, end }\n}\n\n/**\n * Get current month date range\n */\nexport function getCurrentMonthRange(): { start: Date; end: Date } {\n  const now = new Date()\n  const start = new Date(now.getFullYear(), now.getMonth(), 1)\n  const end = new Date()\n  return { start, end }\n}\n\n/**\n * Convert data to CSV format\n */\nexport function convertToCSV(data: Record<string, any>[]): string {\n  if (data.length === 0) return ''\n\n  const headers = Object.keys(data[0])\n  const csvRows = []\n\n  // Add header row\n  csvRows.push(headers.join(','))\n\n  // Add data rows\n  for (const row of data) {\n    const values = headers.map(header => {\n      const value = row[header]\n      // Escape quotes and wrap in quotes if contains comma\n      const escaped = String(value).replace(/\"/g, '\"\"')\n      return escaped.includes(',') ? `\"${escaped}\"` : escaped\n    })\n    csvRows.push(values.join(','))\n  }\n\n  return csvRows.join('\\n')\n}\n\n/**\n * Download a file\n */\nexport function downloadFile(content: string, filename: string, mimeType: string = 'text/plain') {\n  const blob = new Blob([content], { type: mimeType })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n  URL.revokeObjectURL(url)\n}\n\n/**\n * Truncate text with ellipsis\n */\nexport function truncate(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text\n  return text.substring(0, maxLength - 3) + '...'\n}\n\n/**\n * Get initials from name\n */\nexport function getInitials(name: string): string {\n  return name\n    .split(' ')\n    .map(word => word[0])\n    .join('')\n    .toUpperCase()\n    .substring(0, 2)\n}\n\n/**\n * Calculate percentage\n */\nexport function calculatePercentage(value: number, total: number): number {\n  if (total === 0) return 0\n  return (value / total) * 100\n}\n\n/**\n * Calculate trend percentage\n */\nexport function calculateTrend(current: number, previous: number): number {\n  if (previous === 0) return current > 0 ? 100 : 0\n  return ((current - previous) / previous) * 100\n}\n\n/**\n * Format percentage\n */\nexport function formatPercentage(value: number, decimals: number = 1): string {\n  return `${value.toFixed(decimals)}%`\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/app/admin/billing/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { DollarSign, Users, FileText, TrendingUp, Building2, RefreshCw } from 'lucide-react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card'\nimport { Button } from '@/components/ui/Button'\nimport { Badge } from '@/components/ui/Badge'\nimport { Select } from '@/components/ui/Input'\nimport { ParticleBackground } from '@/components/ui/ParticleBackground'\nimport { formatCAD, formatDate, formatDateRange, getPreviousMonthRange, getCurrentMonthRange } from '@/lib/utils/format'\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'\nimport { supabase } from '@/lib/supabase'\nimport type { InvoiceRecord, BillingCustomer, MonthlyTrend } from '@/lib/types/billing'\nimport Link from 'next/link'\n\nexport default function BillingDashboard() {\n  const [loading, setLoading] = useState(true)\n  const [initialLoad, setInitialLoad] = useState(true)\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date())\n  const [customers, setCustomers] = useState<BillingCustomer[]>([])\n  const [selectedCustomerId, setSelectedCustomerId] = useState<string>('all')\n  const [dateRange, setDateRange] = useState<{ start: Date; end: Date }>(getCurrentMonthRange())\n  const loadDashboardDataRef = useRef<(() => Promise<void>) | undefined>(undefined)\n  const [stats, setStats] = useState({\n    currentMonthRevenue: 0,\n    previousMonthRevenue: 0,\n    totalCustomers: 0,\n    pendingInvoices: 0,\n    currentMonthCosts: {\n      twilioSMS: 0,\n      twilioVoice: 0,\n      vonage: 0,\n      retellAI: 0,\n      total: 0\n    }\n  })\n  const [recentInvoices, setRecentInvoices] = useState<InvoiceRecord[]>([])\n  const [chartData, setChartData] = useState<MonthlyTrend[]>([])\n\n  async function loadCustomers() {\n    try {\n      const { data } = await supabase\n        .from('billing_customers')\n        .select('*')\n        .order('customer_name', { ascending: true })\n\n      setCustomers(data || [])\n    } catch (error) {\n      console.error('Failed to load customers:', error)\n      setCustomers([])\n    }\n  }\n\n  const loadDashboardData = useCallback(async () => {\n    if (initialLoad) {\n      setLoading(true)\n    }\n    try {\n      // Load stats\n      await Promise.all([\n        loadCurrentMonthRevenue(),\n        loadPreviousMonthRevenue(),\n        loadCustomerCount(),\n        loadPendingInvoices(),\n        loadRecentInvoices(),\n        loadChartData(),\n        loadCurrentMonthCosts()\n      ])\n      setLastUpdated(new Date())\n    } catch (error) {\n      console.error('Failed to load dashboard data:', error)\n    } finally {\n      if (initialLoad) {\n        setLoading(false)\n        setInitialLoad(false)\n      }\n    }\n  }, [selectedCustomerId, customers, dateRange, initialLoad])\n\n  // Keep ref updated with latest loadDashboardData\n  useEffect(() => {\n    loadDashboardDataRef.current = loadDashboardData\n  }, [loadDashboardData])\n\n  useEffect(() => {\n    loadCustomers()\n  }, [])\n\n  useEffect(() => {\n    loadDashboardData()\n  }, [loadDashboardData])\n\n  // Auto-refresh every minute\n  useEffect(() => {\n    const interval = setInterval(() => {\n      loadDashboardDataRef.current?.()\n    }, 60000) // 60 seconds\n\n    return () => clearInterval(interval)\n  }, []) // No dependencies - interval never recreated\n\n  async function loadCurrentMonthRevenue() {\n    try {\n      let query = supabase\n        .from('invoice_records')\n        .select('total_amount_cad')\n        .gte('billing_period_start', dateRange.start.toISOString().split('T')[0])\n        .lte('billing_period_end', dateRange.end.toISOString().split('T')[0])\n\n      if (selectedCustomerId !== 'all') {\n        query = query.eq('billing_customer_id', selectedCustomerId)\n      }\n\n      const { data } = await query\n      const total = data?.reduce((sum, inv) => sum + Number(inv.total_amount_cad), 0) || 0\n      setStats(prev => ({ ...prev, currentMonthRevenue: total }))\n    } catch {\n      setStats(prev => ({ ...prev, currentMonthRevenue: 0 }))\n    }\n  }\n\n  async function loadPreviousMonthRevenue() {\n    try {\n      const { start, end } = getPreviousMonthRange()\n      let query = supabase\n        .from('invoice_records')\n        .select('total_amount_cad')\n        .gte('billing_period_start', start.toISOString().split('T')[0])\n        .lte('billing_period_end', end.toISOString().split('T')[0])\n\n      if (selectedCustomerId !== 'all') {\n        query = query.eq('billing_customer_id', selectedCustomerId)\n      }\n\n      const { data } = await query\n      const total = data?.reduce((sum, inv) => sum + Number(inv.total_amount_cad), 0) || 0\n      setStats(prev => ({ ...prev, previousMonthRevenue: total }))\n    } catch {\n      setStats(prev => ({ ...prev, previousMonthRevenue: 0 }))\n    }\n  }\n\n  async function loadCustomerCount() {\n    try {\n      if (selectedCustomerId === 'all') {\n        const { count } = await supabase\n          .from('billing_customers')\n          .select('*', { count: 'exact', head: true })\n        setStats(prev => ({ ...prev, totalCustomers: count || 0 }))\n      } else {\n        setStats(prev => ({ ...prev, totalCustomers: 1 }))\n      }\n    } catch {\n      setStats(prev => ({ ...prev, totalCustomers: 0 }))\n    }\n  }\n\n  async function loadPendingInvoices() {\n    try {\n      let query = supabase\n        .from('invoice_records')\n        .select('*', { count: 'exact', head: true })\n        .in('invoice_status', ['draft', 'sent'])\n        .gte('billing_period_start', dateRange.start.toISOString().split('T')[0])\n        .lte('billing_period_end', dateRange.end.toISOString().split('T')[0])\n\n      if (selectedCustomerId !== 'all') {\n        query = query.eq('billing_customer_id', selectedCustomerId)\n      }\n\n      const { count } = await query\n      setStats(prev => ({ ...prev, pendingInvoices: count || 0 }))\n    } catch {\n      setStats(prev => ({ ...prev, pendingInvoices: 0 }))\n    }\n  }\n\n  async function loadRecentInvoices() {\n    let query = supabase\n      .from('invoice_records')\n      .select(`\n        *,\n        billing_customers!inner(customer_name, customer_email)\n      `)\n      .gte('billing_period_start', dateRange.start.toISOString().split('T')[0])\n      .lte('billing_period_end', dateRange.end.toISOString().split('T')[0])\n      .order('created_at', { ascending: false })\n      .limit(10)\n\n    if (selectedCustomerId !== 'all') {\n      query = query.eq('billing_customer_id', selectedCustomerId)\n    }\n\n    const { data } = await query\n    setRecentInvoices((data as any) || [])\n  }\n\n  async function loadCurrentMonthCosts() {\n    try {\n      let query = supabase\n        .from('invoice_records')\n        .select('twilio_sms_cost_cad, twilio_voice_cost_cad, vonage_cost_cad, retell_ai_cost_cad')\n        .gte('billing_period_start', dateRange.start.toISOString().split('T')[0])\n        .lte('billing_period_end', dateRange.end.toISOString().split('T')[0])\n\n      if (selectedCustomerId !== 'all') {\n        query = query.eq('billing_customer_id', selectedCustomerId)\n      }\n\n      const { data } = await query\n\n      const twilioSMS = data?.reduce((sum, inv) => sum + Number(inv.twilio_sms_cost_cad || 0), 0) || 0\n      const twilioVoice = data?.reduce((sum, inv) => sum + Number(inv.twilio_voice_cost_cad || 0), 0) || 0\n      const vonage = data?.reduce((sum, inv) => sum + Number(inv.vonage_cost_cad || 0), 0) || 0\n      const retellAI = data?.reduce((sum, inv) => sum + Number(inv.retell_ai_cost_cad || 0), 0) || 0\n      const total = twilioSMS + twilioVoice + vonage + retellAI\n\n      setStats(prev => ({\n        ...prev,\n        currentMonthCosts: { twilioSMS, twilioVoice, vonage, retellAI, total }\n      }))\n    } catch (error) {\n      setStats(prev => ({\n        ...prev,\n        currentMonthCosts: { twilioSMS: 0, twilioVoice: 0, vonage: 0, retellAI: 0, total: 0 }\n      }))\n    }\n  }\n\n  async function loadChartData() {\n    // TODO: Implement monthly trend calculation from database\n    setChartData([])\n  }\n\n  function getStatusColor(status: string): 'gray' | 'blue' | 'green' | 'red' | 'yellow' {\n    const colors: Record<string, 'gray' | 'blue' | 'green' | 'red' | 'yellow'> = {\n      draft: 'gray',\n      sent: 'blue',\n      paid: 'green',\n      overdue: 'red',\n      cancelled: 'gray'\n    }\n    return colors[status] || 'gray'\n  }\n\n  if (loading) {\n    return (\n      <div className=\"p-4 md:p-6 lg:p-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 md:h-8 bg-gray-200 dark:bg-gray-700 rounded w-1/2 md:w-1/4 mb-6 md:mb-8\"></div>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 mb-6 md:mb-8\">\n            {[...Array(4)].map((_, i) => (\n              <div key={i} className=\"h-24 md:h-32 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-4 md:p-6 lg:p-8\">\n      <div className=\"mb-6 md:mb-8\">\n        <div className=\"flex flex-col lg:flex-row items-start lg:justify-between gap-4 lg:gap-6 mb-6\">\n          <div className=\"w-full lg:w-auto\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-3\">\n              <h1 className=\"text-2xl md:text-3xl font-black gradient-text\">Billing Admin</h1>\n              <div className=\"flex items-center gap-2 text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\n                <RefreshCw className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                <span>Last updated: {lastUpdated.toLocaleTimeString()}</span>\n              </div>\n            </div>\n            <p className=\"text-sm md:text-base text-gray-600 dark:text-gray-400 mt-2\">\n              <span className=\"hidden sm:inline\">Manage customers, generate invoices, and track revenue • Auto-refreshes every minute</span>\n              <span className=\"sm:hidden\">Manage billing • Auto-refresh</span>\n            </p>\n          </div>\n\n          {/* Company Selector */}\n          <div className=\"w-full lg:w-72\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              <Building2 className=\"w-4 h-4 inline mr-2\" />\n              Filter by Company\n            </label>\n            <Select\n              value={selectedCustomerId}\n              onChange={(e) => setSelectedCustomerId(e.target.value)}\n              options={[\n                { value: 'all', label: 'All Companies' },\n                ...customers.map(c => ({\n                  value: c.id,\n                  label: c.customer_name\n                }))\n              ]}\n            />\n          </div>\n        </div>\n\n        {/* Date Range Filter */}\n        <div className=\"flex flex-col lg:flex-row gap-3 lg:items-center\">\n          <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300 whitespace-nowrap\">From:</label>\n              <input\n                type=\"date\"\n                value={dateRange.start.toISOString().split('T')[0]}\n                onChange={(e) => setDateRange({ ...dateRange, start: new Date(e.target.value) })}\n                className=\"w-full sm:w-40 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300 whitespace-nowrap\">To:</label>\n              <input\n                type=\"date\"\n                value={dateRange.end.toISOString().split('T')[0]}\n                onChange={(e) => setDateRange({ ...dateRange, end: new Date(e.target.value) })}\n                className=\"w-full sm:w-40 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n          <div className=\"flex flex-wrap gap-2\">\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => {\n                const today = new Date()\n                today.setHours(0, 0, 0, 0)\n                setDateRange({ start: today, end: today })\n              }}\n            >\n              <span className=\"hidden sm:inline\">Today</span>\n              <span className=\"sm:hidden\">1D</span>\n            </Button>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => setDateRange(getCurrentMonthRange())}\n            >\n              <span className=\"hidden sm:inline\">This Month</span>\n              <span className=\"sm:hidden\">MTD</span>\n            </Button>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => setDateRange(getPreviousMonthRange())}\n            >\n              <span className=\"hidden sm:inline\">Last Month</span>\n              <span className=\"sm:hidden\">LM</span>\n            </Button>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => {\n                const end = new Date()\n                const start = new Date()\n                start.setMonth(start.getMonth() - 3)\n                setDateRange({ start, end })\n              }}\n            >\n              <span className=\"hidden sm:inline\">Last 3 Months</span>\n              <span className=\"sm:hidden\">3M</span>\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Combined Cost - Large Display */}\n      <Card className=\"mb-6 md:mb-8 bg-gradient-to-br from-blue-600 to-purple-600 border-none relative overflow-hidden\">\n        <ParticleBackground />\n        <CardContent className=\"p-4 md:p-6 lg:p-8 relative z-10\">\n          <div className=\"text-center\">\n            <p className=\"text-white/80 text-sm md:text-base lg:text-lg mb-2\">\n              Total Cost ({formatDateRange(dateRange)})\n            </p>\n            <p className=\"text-3xl md:text-5xl lg:text-6xl font-black text-white mb-4 md:mb-6\" style={{ textShadow: '0 4px 12px rgba(0, 0, 0, 0.5), 0 2px 4px rgba(0, 0, 0, 0.3)' }}>\n              {formatCAD(stats.currentMonthCosts.total)}\n            </p>\n            <div className=\"grid grid-cols-2 md:flex md:items-center md:justify-center gap-4 md:gap-6 lg:gap-8 text-white/90\">\n              <div>\n                <p className=\"text-xs md:text-sm opacity-75\">Twilio SMS</p>\n                <p className=\"text-base md:text-lg lg:text-xl font-bold\">{formatCAD(stats.currentMonthCosts.twilioSMS)}</p>\n              </div>\n              <div className=\"hidden md:block w-px h-12 bg-white/30\"></div>\n              <div>\n                <p className=\"text-xs md:text-sm opacity-75\">Twilio Voice</p>\n                <p className=\"text-base md:text-lg lg:text-xl font-bold\">{formatCAD(stats.currentMonthCosts.twilioVoice)}</p>\n              </div>\n              <div className=\"hidden md:block w-px h-12 bg-white/30\"></div>\n              <div>\n                <p className=\"text-xs md:text-sm opacity-75\">Vonage</p>\n                <p className=\"text-base md:text-lg lg:text-xl font-bold\">{formatCAD(stats.currentMonthCosts.vonage)}</p>\n              </div>\n              <div className=\"hidden md:block w-px h-12 bg-white/30\"></div>\n              <div>\n                <p className=\"text-xs md:text-sm opacity-75\">Retell AI</p>\n                <p className=\"text-base md:text-lg lg:text-xl font-bold\">{formatCAD(stats.currentMonthCosts.retellAI)}</p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 mb-6 md:mb-8\">\n        <Card>\n          <CardContent className=\"p-4 md:p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-xs md:text-sm text-gray-600 dark:text-gray-400\">Revenue (Selected Period)</p>\n                <p className=\"text-2xl md:text-3xl lg:text-4xl font-bold text-green-600 dark:text-green-400\">{formatCAD(stats.currentMonthRevenue)}</p>\n              </div>\n              <div className=\"p-2 md:p-3 bg-blue-100 dark:bg-blue-900/30 rounded-lg\">\n                <DollarSign className=\"w-5 h-5 md:w-6 md:h-6 text-blue-600 dark:text-blue-400\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4 md:p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-xs md:text-sm text-gray-600 dark:text-gray-400\">Growth vs Previous Period</p>\n                <p className=\"text-2xl md:text-3xl lg:text-4xl font-bold text-green-600 dark:text-green-400\">\n                  {stats.previousMonthRevenue > 0\n                    ? `${((stats.currentMonthRevenue - stats.previousMonthRevenue) / stats.previousMonthRevenue * 100).toFixed(1)}%`\n                    : '0%'\n                  }\n                </p>\n              </div>\n              <div className=\"p-2 md:p-3 bg-green-100 dark:bg-green-900/30 rounded-lg\">\n                <TrendingUp className=\"w-5 h-5 md:w-6 md:h-6 text-green-600 dark:text-green-400\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4 md:p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-xs md:text-sm text-gray-600 dark:text-gray-400\">Total Customers</p>\n                <p className=\"text-2xl md:text-3xl lg:text-4xl font-bold text-gray-700 dark:text-gray-200\">{stats.totalCustomers}</p>\n              </div>\n              <div className=\"p-2 md:p-3 bg-purple-100 dark:bg-purple-900/30 rounded-lg\">\n                <Users className=\"w-5 h-5 md:w-6 md:h-6 text-purple-600 dark:text-purple-400\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4 md:p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-xs md:text-sm text-gray-600 dark:text-gray-400\">Pending Invoices</p>\n                <p className=\"text-2xl md:text-3xl lg:text-4xl font-bold text-gray-700 dark:text-gray-200\">{stats.pendingInvoices}</p>\n              </div>\n              <div className=\"p-2 md:p-3 bg-yellow-100 dark:bg-yellow-900/30 rounded-lg\">\n                <FileText className=\"w-5 h-5 md:w-6 md:h-6 text-yellow-600 dark:text-yellow-400\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"flex flex-wrap gap-2 md:gap-4 mb-6 md:mb-8\">\n        <Link href=\"/admin/billing/invoices/generate\">\n          <Button size=\"sm\" className=\"md:text-base md:px-6 md:py-3\">\n            <span className=\"hidden sm:inline\">Generate Monthly Invoices</span>\n            <span className=\"sm:hidden\">Generate Invoices</span>\n          </Button>\n        </Link>\n        <Link href=\"/admin/billing/invoices\">\n          <Button variant=\"secondary\" size=\"sm\" className=\"md:text-base md:px-6 md:py-3\">\n            <span className=\"hidden sm:inline\">View Invoice History</span>\n            <span className=\"sm:hidden\">Invoices</span>\n          </Button>\n        </Link>\n        <Link href=\"/admin/billing/customers\">\n          <Button variant=\"secondary\" size=\"sm\" className=\"md:text-base md:px-6 md:py-3\">\n            <span className=\"hidden sm:inline\">Manage Customers</span>\n            <span className=\"sm:hidden\">Customers</span>\n          </Button>\n        </Link>\n        <Link href=\"/admin/billing/settings\">\n          <Button variant=\"secondary\" size=\"sm\" className=\"md:text-base md:px-6 md:py-3\">Settings</Button>\n        </Link>\n      </div>\n\n      {/* Monthly Trends Chart */}\n      <Card className=\"mb-6 md:mb-8\">\n        <CardHeader>\n          <CardTitle className=\"text-base md:text-lg\">Revenue by Company (Last 6 Months)</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {chartData.length === 0 ? (\n            <div className=\"flex items-center justify-center h-[200px] md:h-[300px] text-gray-500 dark:text-gray-400 text-sm md:text-base px-4 text-center\">\n              <p>No revenue data available yet. Start by adding customers and generating invoices.</p>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height={window.innerWidth < 768 ? 250 : 300}>\n              <BarChart data={chartData}>\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-gray-300 dark:stroke-gray-600\" />\n                <XAxis dataKey=\"month\" className=\"fill-gray-700 dark:fill-gray-300\" />\n                <YAxis tickFormatter={(value) => `$${value}`} className=\"fill-gray-700 dark:fill-gray-300\" />\n                <Tooltip\n                  formatter={(value) => `${formatCAD(Number(value))}`}\n                  contentStyle={{\n                    backgroundColor: 'var(--card-bg)',\n                    border: '1px solid var(--border-color)',\n                    borderRadius: '0.5rem',\n                    color: 'var(--text-primary)'\n                  }}\n                  labelStyle={{\n                    color: 'var(--text-primary)'\n                  }}\n                  itemStyle={{\n                    color: 'var(--text-primary)'\n                  }}\n                />\n                <Legend wrapperStyle={{ color: 'var(--text-secondary)' }} />\n                <Bar dataKey=\"sunriseMedical\" stackId=\"a\" fill=\"#3B82F6\" name=\"Sunrise Medical Clinic\" />\n                <Bar dataKey=\"valleyDental\" stackId=\"a\" fill=\"#6366F1\" name=\"Valley Dental Group\" />\n                <Bar dataKey=\"wellnessChiro\" stackId=\"a\" fill=\"#10B981\" name=\"Wellness Chiropractic\" />\n                <Bar dataKey=\"pediatricAssoc\" stackId=\"a\" fill=\"#F59E0B\" name=\"Pediatric Associates\" />\n              </BarChart>\n            </ResponsiveContainer>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Recent Activity */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-base md:text-lg\">Recent Invoices</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto -mx-4 md:mx-0\">\n            <table className=\"w-full min-w-[600px]\">\n              <thead>\n                <tr className=\"border-b border-gray-200 dark:border-gray-700\">\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Date</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Customer</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Period</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Amount</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {recentInvoices.length === 0 ? (\n                  <tr>\n                    <td colSpan={5} className=\"text-center py-6 md:py-8 text-gray-500 dark:text-gray-400 text-sm\">\n                      No invoices yet. Generate your first invoice to get started.\n                    </td>\n                  </tr>\n                ) : (\n                  recentInvoices.map((invoice: any) => (\n                    <tr key={invoice.id} className=\"border-b border-gray-100 dark:border-gray-800 hover:bg-gray-50 dark:hover:bg-gray-800/50\">\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-900 dark:text-gray-100\">{formatDate(invoice.created_at)}</td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-900 dark:text-gray-100\">{invoice.billing_customers?.customer_name}</td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-900 dark:text-gray-100\">\n                        {formatDate(invoice.billing_period_start)} - {formatDate(invoice.billing_period_end)}\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-900 dark:text-gray-100\">{formatCAD(Number(invoice.total_amount_cad))}</td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm\">\n                        <Badge color={getStatusColor(invoice.invoice_status)}>\n                          {invoice.invoice_status}\n                        </Badge>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}