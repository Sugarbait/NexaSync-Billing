{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Card.tsx"],"sourcesContent":["import React from 'react'\n\ninterface CardProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function Card({ children, className = '' }: CardProps) {\n  return (\n    <div className={`bg-gray-100 dark:bg-gray-800 rounded-lg shadow-sm border border-gray-300 dark:border-gray-700 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardHeader({ children, className = '' }: CardHeaderProps) {\n  return (\n    <div className={`px-6 py-4 border-b border-gray-200 dark:border-gray-700 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardTitle({ children, className = '' }: CardTitleProps) {\n  return (\n    <h3 className={`text-lg font-bold gradient-text ${className}`}>\n      {children}\n    </h3>\n  )\n}\n\ninterface CardContentProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardContent({ children, className = '' }: CardContentProps) {\n  return (\n    <div className={`px-6 py-4 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardFooter({ children, className = '' }: CardFooterProps) {\n  return (\n    <div className={`px-6 py-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 rounded-b-lg ${className}`}>\n      {children}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAOO,SAAS,KAAK,KAAuC;QAAvC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAa,GAAvC;IACnB,qBACE,6LAAC;QAAI,WAAW,AAAC,iGAA0G,OAAV;kBAC9G;;;;;;AAGP;KANgB;AAaT,SAAS,WAAW,KAA6C;QAA7C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAmB,GAA7C;IACzB,qBACE,6LAAC;QAAI,WAAW,AAAC,2DAAoE,OAAV;kBACxE;;;;;;AAGP;MANgB;AAaT,SAAS,UAAU,KAA4C;QAA5C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAkB,GAA5C;IACxB,qBACE,6LAAC;QAAG,WAAW,AAAC,mCAA4C,OAAV;kBAC/C;;;;;;AAGP;MANgB;AAaT,SAAS,YAAY,KAA8C;QAA9C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAoB,GAA9C;IAC1B,qBACE,6LAAC;QAAI,WAAW,AAAC,aAAsB,OAAV;kBAC1B;;;;;;AAGP;MANgB;AAaT,SAAS,WAAW,KAA6C;QAA7C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAmB,GAA7C;IACzB,qBACE,6LAAC;QAAI,WAAW,AAAC,oGAA6G,OAAV;kBACjH;;;;;;AAGP;MANgB","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Button.tsx"],"sourcesContent":["import React from 'react'\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger' | 'ghost'\n  size?: 'sm' | 'md' | 'lg'\n  loading?: boolean\n  children: React.ReactNode\n}\n\nexport function Button({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  disabled,\n  children,\n  className = '',\n  ...props\n}: ButtonProps) {\n  const baseStyles = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2'\n\n  const variants = {\n    primary: 'bg-blue-600 dark:bg-blue-500 text-white hover:bg-blue-700 dark:hover:bg-blue-600 focus:ring-blue-500 disabled:bg-blue-300 dark:disabled:bg-blue-800',\n    secondary: 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-gray-600 focus:ring-gray-500 disabled:bg-gray-100 dark:disabled:bg-gray-800',\n    danger: 'bg-red-600 dark:bg-red-500 text-white hover:bg-red-700 dark:hover:bg-red-600 focus:ring-red-500 disabled:bg-red-300 dark:disabled:bg-red-800',\n    ghost: 'bg-transparent text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:ring-gray-500'\n  }\n\n  const sizes = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  }\n\n  return (\n    <button\n      className={`${baseStyles} ${variants[variant]} ${sizes[size]} ${className} ${\n        (disabled || loading) ? 'cursor-not-allowed opacity-50' : ''\n      }`}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && (\n        <svg\n          className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      )}\n      {children}\n    </button>\n  )\n}\n"],"names":[],"mappings":";;;;;;AASO,SAAS,OAAO,KAQT;QARS,EACrB,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,QAAQ,EACR,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACS,GARS;IASrB,MAAM,aAAa;IAEnB,MAAM,WAAW;QACf,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;IACT;IAEA,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,6LAAC;QACC,WAAW,AAAC,GAAgB,OAAd,YAAW,KAAwB,OAArB,QAAQ,CAAC,QAAQ,EAAC,KAAkB,OAAf,KAAK,CAAC,KAAK,EAAC,KAC3D,OAD8D,WAAU,KAEzE,OADC,AAAC,YAAY,UAAW,kCAAkC;QAE5D,UAAU,YAAY;QACrB,GAAG,KAAK;;YAER,yBACC,6LAAC;gBACC,WAAU;gBACV,OAAM;gBACN,MAAK;gBACL,SAAQ;;kCAER,6LAAC;wBACC,WAAU;wBACV,IAAG;wBACH,IAAG;wBACH,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,GAAE;;;;;;;;;;;;YAIP;;;;;;;AAGP;KAzDgB","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Input.tsx"],"sourcesContent":["import React from 'react'\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  helpText?: string // Add support for helpText (alias for helperText)\n}\n\nexport function Input({\n  label,\n  error,\n  helperText,\n  helpText,\n  className = '',\n  ...props\n}: InputProps) {\n  // Use either helperText or helpText\n  const helper = helperText || helpText\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <input\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helper && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helper}</p>\n      )}\n    </div>\n  )\n}\n\ninterface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  label?: string\n  error?: string\n  helperText?: string\n}\n\nexport function Textarea({\n  label,\n  error,\n  helperText,\n  className = '',\n  ...props\n}: TextareaProps) {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <textarea\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helperText}</p>\n      )}\n    </div>\n  )\n}\n\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  options: Array<{ value: string | number; label: string }>\n}\n\nexport function Select({\n  label,\n  error,\n  helperText,\n  options,\n  className = '',\n  ...props\n}: SelectProps) {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <select\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      >\n        {options.map(option => (\n          <option key={option.value} value={option.value} className=\"bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\">\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helperText}</p>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;AASO,SAAS,MAAM,KAOT;QAPS,EACpB,KAAK,EACL,KAAK,EACL,UAAU,EACV,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACQ,GAPS;IAQpB,oCAAoC;IACpC,MAAM,SAAS,cAAc;IAE7B,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;;;;;;YAEV,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,UAAU,CAAC,uBACV,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;KAhCgB;AAwCT,SAAS,SAAS,KAMT;QANS,EACvB,KAAK,EACL,KAAK,EACL,UAAU,EACV,YAAY,EAAE,EACd,GAAG,OACW,GANS;IAOvB,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;;;;;;YAEV,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,cAAc,CAAC,uBACd,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;MA5BgB;AAqCT,SAAS,OAAO,KAOT;QAPS,EACrB,KAAK,EACL,KAAK,EACL,UAAU,EACV,OAAO,EACP,YAAY,EAAE,EACd,GAAG,OACS,GAPS;IAQrB,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;0BAER,QAAQ,GAAG,CAAC,CAAA,uBACX,6LAAC;wBAA0B,OAAO,OAAO,KAAK;wBAAE,WAAU;kCACvD,OAAO,KAAK;uBADF,OAAO,KAAK;;;;;;;;;;YAK5B,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,cAAc,CAAC,uBACd,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;MAnCgB","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n"],"names":[],"mappings":";;;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,0MAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/lib/services/mfaService.ts"],"sourcesContent":["/**\n * ⚠️ SECURITY CRITICAL FILE - DO NOT MODIFY WITHOUT AUTHORIZATION ⚠️\n *\n * MFA Service - TOTP (Time-based One-Time Password) Implementation\n * Uses Google Authenticator compatible TOTP tokens\n *\n * This file contains cryptographic operations for MFA.\n * Any unauthorized changes could compromise system security.\n *\n * Contact: elitesquadp@protonmail.com for authorization\n */\n\nimport { authenticator } from 'otplib'\nimport QRCode from 'qrcode'\n\nclass MFAService {\n  /**\n   * Generate a new MFA secret for a user\n   */\n  generateSecret(): string {\n    return authenticator.generateSecret()\n  }\n\n  /**\n   * Generate QR code URL for scanning with authenticator app\n   */\n  async generateQRCode(email: string, secret: string): Promise<string> {\n    const otpauth = authenticator.keyuri(email, 'NexaSync Billing', secret)\n\n    try {\n      const qrCodeDataUrl = await QRCode.toDataURL(otpauth)\n      return qrCodeDataUrl\n    } catch (error) {\n      console.error('Failed to generate QR code:', error)\n      throw new Error('Failed to generate QR code')\n    }\n  }\n\n  /**\n   * Generate backup codes for MFA recovery\n   */\n  generateBackupCodes(count: number = 8): string[] {\n    const codes: string[] = []\n    for (let i = 0; i < count; i++) {\n      // Generate 8-character alphanumeric codes\n      const code = Math.random().toString(36).substring(2, 10).toUpperCase()\n      codes.push(code)\n    }\n    return codes\n  }\n\n  /**\n   * Verify a TOTP token\n   */\n  verifyToken(token: string, secret: string): boolean {\n    try {\n      // Remove any spaces or dashes from the token\n      const cleanToken = token.replace(/[\\s-]/g, '')\n\n      // Verify the token with a window of ±1 time step (30 seconds)\n      return authenticator.verify({\n        token: cleanToken,\n        secret: secret\n      })\n    } catch (error) {\n      console.error('Token verification failed:', error)\n      return false\n    }\n  }\n\n  /**\n   * Get the current TOTP token (for testing purposes)\n   */\n  generateToken(secret: string): string {\n    return authenticator.generate(secret)\n  }\n\n  /**\n   * Encrypt MFA secret before storing in database\n   * NOTE: This is a simple base64 encoding. In production, use proper encryption (AES-256-GCM)\n   */\n  encryptSecret(secret: string): string {\n    // TODO: Replace with actual encryption in production\n    return Buffer.from(secret).toString('base64')\n  }\n\n  /**\n   * Decrypt MFA secret from database\n   */\n  decryptSecret(encryptedSecret: string): string {\n    // TODO: Replace with actual decryption in production\n    return Buffer.from(encryptedSecret, 'base64').toString('utf-8')\n  }\n\n  /**\n   * Format secret for display (shows as XXXX XXXX XXXX XXXX)\n   */\n  formatSecretForDisplay(secret: string): string {\n    return secret.match(/.{1,4}/g)?.join(' ') || secret\n  }\n}\n\nexport const mfaService = new MFAService()\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;AAyEU;AAvEX;AACA;;;AAEA,MAAM;IACJ;;GAEC,GACD,iBAAyB;QACvB,OAAO,mJAAa,CAAC,cAAc;IACrC;IAEA;;GAEC,GACD,MAAM,eAAe,KAAa,EAAE,MAAc,EAAmB;QACnE,MAAM,UAAU,mJAAa,CAAC,MAAM,CAAC,OAAO,oBAAoB;QAEhE,IAAI;YACF,MAAM,gBAAgB,MAAM,sJAAM,CAAC,SAAS,CAAC;YAC7C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,MAAM,IAAI,MAAM;QAClB;IACF;IAEA;;GAEC,GACD,sBAAiD;YAA7B,QAAA,iEAAgB;QAClC,MAAM,QAAkB,EAAE;QAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;YAC9B,0CAA0C;YAC1C,MAAM,OAAO,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI,WAAW;YACpE,MAAM,IAAI,CAAC;QACb;QACA,OAAO;IACT;IAEA;;GAEC,GACD,YAAY,KAAa,EAAE,MAAc,EAAW;QAClD,IAAI;YACF,6CAA6C;YAC7C,MAAM,aAAa,MAAM,OAAO,CAAC,UAAU;YAE3C,8DAA8D;YAC9D,OAAO,mJAAa,CAAC,MAAM,CAAC;gBAC1B,OAAO;gBACP,QAAQ;YACV;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,OAAO;QACT;IACF;IAEA;;GAEC,GACD,cAAc,MAAc,EAAU;QACpC,OAAO,mJAAa,CAAC,QAAQ,CAAC;IAChC;IAEA;;;GAGC,GACD,cAAc,MAAc,EAAU;QACpC,qDAAqD;QACrD,OAAO,wKAAM,CAAC,IAAI,CAAC,QAAQ,QAAQ,CAAC;IACtC;IAEA;;GAEC,GACD,cAAc,eAAuB,EAAU;QAC7C,qDAAqD;QACrD,OAAO,wKAAM,CAAC,IAAI,CAAC,iBAAiB,UAAU,QAAQ,CAAC;IACzD;IAEA;;GAEC,GACD,uBAAuB,MAAc,EAAU;YACtC;QAAP,OAAO,EAAA,gBAAA,OAAO,KAAK,CAAC,wBAAb,oCAAA,cAAyB,IAAI,CAAC,SAAQ;IAC/C;AACF;AAEO,MAAM,aAAa,IAAI","debugId":null}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/app/login/page.tsx"],"sourcesContent":["/**\n * ⚠️ SECURITY CRITICAL FILE - DO NOT MODIFY WITHOUT AUTHORIZATION ⚠️\n *\n * This file contains authentication and MFA login logic.\n * Any unauthorized changes could compromise system security.\n *\n * Protected Features:\n * - MFA enforcement (lines 74-79, 132-141)\n * - Session verification (lines 98-99, 160-161)\n * - Bypass prevention (lines 288-294)\n *\n * Contact: elitesquadp@protonmail.com for authorization\n */\n\n'use client'\n\nimport React, { useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport Image from 'next/image'\nimport { DollarSign, Shield, Key } from 'lucide-react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card'\nimport { Button } from '@/components/ui/Button'\nimport { Input } from '@/components/ui/Input'\nimport { supabase } from '@/lib/supabase'\nimport { mfaService } from '@/lib/services/mfaService'\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const [loading, setLoading] = useState(false)\n  const [showMFA, setShowMFA] = useState(false)\n  const [showRegister, setShowRegister] = useState(false)\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  })\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    fullName: ''\n  })\n  const [mfaToken, setMfaToken] = useState('')\n  const [error, setError] = useState('')\n  const [successMessage, setSuccessMessage] = useState('')\n\n  async function handleLogin(e: React.FormEvent) {\n    e.preventDefault()\n    setError('')\n    setSuccessMessage('')\n    setLoading(true)\n\n    try {\n      // Sign in with Supabase\n      const { data: authData, error: authError } = await supabase.auth.signInWithPassword({\n        email: credentials.email,\n        password: credentials.password\n      })\n\n      if (authError) throw authError\n\n      if (!authData.user) {\n        throw new Error('Login failed')\n      }\n\n      // Check if user exists in billing_users\n      const { data: billingUser, error: userError } = await supabase\n        .from('billing_users')\n        .select('*')\n        .eq('auth_user_id', authData.user.id)\n        .single()\n\n      if (userError || !billingUser) {\n        await supabase.auth.signOut()\n        throw new Error('User not authorized for billing system')\n      }\n\n      if (!billingUser.is_active) {\n        await supabase.auth.signOut()\n        throw new Error('Your account is pending approval from an administrator. Please wait for activation.')\n      }\n\n      // Check if MFA is required\n      if (billingUser.mfa_enabled) {\n        setShowMFA(true)\n        setLoading(false)\n        return\n      }\n\n      // Update last login\n      await supabase\n        .from('billing_users')\n        .update({ last_login_at: new Date().toISOString() })\n        .eq('id', billingUser.id)\n\n      // Log login attempt\n      await supabase\n        .from('login_history')\n        .insert({\n          billing_user_id: billingUser.id,\n          email: credentials.email,\n          login_successful: true,\n          mfa_verified: false\n        })\n\n      // Store session flag (no MFA required for this user)\n      sessionStorage.setItem('mfa_verified', 'true')\n      sessionStorage.setItem('mfa_verified_at', new Date().toISOString())\n\n      // Redirect to dashboard\n      router.push('/admin/billing')\n    } catch (error) {\n      console.error('Login error:', error)\n      setError(error instanceof Error ? error.message : 'Login failed')\n      setLoading(false)\n    }\n  }\n\n  async function handleMFAVerify(e: React.FormEvent) {\n    e.preventDefault()\n    setError('')\n    setLoading(true)\n\n    try {\n      if (!/^\\d{6}$/.test(mfaToken)) {\n        throw new Error('Invalid MFA code format. Please enter 6 digits.')\n      }\n\n      const { data: { user } } = await supabase.auth.getUser()\n      if (!user) throw new Error('Not authenticated')\n\n      const { data: billingUser } = await supabase\n        .from('billing_users')\n        .select('*')\n        .eq('auth_user_id', user.id)\n        .single()\n\n      if (!billingUser) throw new Error('User not found')\n\n      // Verify TOTP token\n      if (billingUser.mfa_secret) {\n        const decryptedSecret = mfaService.decryptSecret(billingUser.mfa_secret)\n        const isValid = mfaService.verifyToken(mfaToken, decryptedSecret)\n\n        if (!isValid) {\n          throw new Error('Invalid MFA code. Please try again.')\n        }\n      } else {\n        throw new Error('MFA not properly configured for this user')\n      }\n\n      // Update last login\n      await supabase\n        .from('billing_users')\n        .update({ last_login_at: new Date().toISOString() })\n        .eq('id', billingUser.id)\n\n      // Log login attempt\n      await supabase\n        .from('login_history')\n        .insert({\n          billing_user_id: billingUser.id,\n          email: credentials.email,\n          login_successful: true,\n          mfa_verified: true\n        })\n\n      // Store MFA verification flag in session\n      sessionStorage.setItem('mfa_verified', 'true')\n      sessionStorage.setItem('mfa_verified_at', new Date().toISOString())\n\n      // Redirect to dashboard\n      router.push('/admin/billing')\n    } catch (error) {\n      console.error('MFA verification error:', error)\n      setError(error instanceof Error ? error.message : 'MFA verification failed')\n      setLoading(false)\n    }\n  }\n\n  async function handleRegister(e: React.FormEvent) {\n    e.preventDefault()\n    setError('')\n    setSuccessMessage('')\n    setLoading(true)\n\n    try {\n      // Validation\n      if (registerData.password !== registerData.confirmPassword) {\n        throw new Error('Passwords do not match')\n      }\n\n      if (registerData.password.length < 8) {\n        throw new Error('Password must be at least 8 characters')\n      }\n\n      if (!registerData.fullName.trim()) {\n        throw new Error('Full name is required')\n      }\n\n      // Create user via server-side API\n      const response = await fetch('/api/admin/create-user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: registerData.email,\n          password: registerData.password,\n          full_name: registerData.fullName,\n          role: 'admin',\n          mfa_enabled: false,\n          is_active: false // Requires admin approval\n        })\n      })\n\n      const result = await response.json()\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Registration failed')\n      }\n\n      // Show success message and redirect to login\n      setError('')\n      setShowRegister(false)\n      setRegisterData({ email: '', password: '', confirmPassword: '', fullName: '' })\n\n      // Show a success message that account needs approval\n      setSuccessMessage('Registration successful! Your account is pending approval from an administrator. You will be able to log in once your account is activated.')\n\n      // No auto-login - user must wait for approval\n    } catch (error) {\n      console.error('Registration error:', error)\n      setError(error instanceof Error ? error.message : 'Registration failed')\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-200 dark:bg-gray-900 flex items-start justify-center p-4 pt-8 md:pt-16\">\n      <div className=\"w-full max-w-md\">\n        {/* Logo */}\n        <div className=\"text-center mb-6 md:mb-8\">\n          <div className=\"flex justify-center mb-3 md:mb-4\">\n            <Image\n              src=\"https://nexasync.ca/images/NexaSync-White.png\"\n              alt=\"NexaSync Logo\"\n              width={220}\n              height={60}\n              className=\"h-12 md:h-16 w-auto\"\n              priority\n            />\n          </div>\n          <h1 className=\"text-xl md:text-2xl gradient-text mb-2\">Billing Admin</h1>\n          <p className=\"text-sm md:text-base text-gray-600 dark:text-gray-400 flex items-center justify-center gap-2\">\n            <Shield className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\n            <span className=\"hidden sm:inline\">MFA Protected • Super User Access</span>\n            <span className=\"sm:hidden\">MFA Protected</span>\n          </p>\n        </div>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-center\">\n              {showMFA ? 'Enter MFA Code' : showRegister ? 'Create New Account' : 'Sign In'}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {showMFA ? (\n              <form onSubmit={handleMFAVerify} className=\"space-y-4\">\n                {error && (\n                  <div className=\"bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-700 text-red-800 dark:text-red-300 px-4 py-3 rounded-lg text-sm\">\n                    {error}\n                  </div>\n                )}\n\n                <div className=\"bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 p-4 rounded-lg\">\n                  <div className=\"flex flex-col items-center gap-3 mb-2\">\n                    <Key className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                    <p className=\"text-sm md:text-base font-semibold text-blue-900 dark:text-blue-300 text-center\">\n                      Multi-Factor Authentication Required\n                    </p>\n                  </div>\n                  <p className=\"text-sm text-blue-800 dark:text-blue-400 text-center\">\n                    Enter the 6-digit code from your authenticator app.\n                  </p>\n                </div>\n\n                <div className=\"w-full\">\n                  <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1 text-center\">\n                    MFA Code\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={mfaToken}\n                    onChange={(e) => setMfaToken(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n                    placeholder=\"000000\"\n                    required\n                    autoComplete=\"one-time-code\"\n                    maxLength={6}\n                    pattern=\"\\d{6}\"\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-gray-600 text-center text-2xl tracking-widest font-mono\"\n                  />\n                </div>\n\n                <div className=\"flex gap-3\">\n                  <Button\n                    type=\"button\"\n                    variant=\"secondary\"\n                    onClick={async () => {\n                      // Sign out user to prevent MFA bypass\n                      await supabase.auth.signOut()\n                      setShowMFA(false)\n                      setMfaToken('')\n                      setError('')\n                    }}\n                    className=\"flex-1\"\n                  >\n                    Back\n                  </Button>\n                  <Button type=\"submit\" className=\"flex-1\" loading={loading}>\n                    Verify\n                  </Button>\n                </div>\n              </form>\n            ) : showRegister ? (\n              <form onSubmit={handleRegister} className=\"space-y-4\">\n                {error && (\n                  <div className=\"bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-700 text-red-800 dark:text-red-300 px-4 py-3 rounded-lg text-sm\">\n                    {error}\n                  </div>\n                )}\n\n                {successMessage && (\n                  <div className=\"bg-green-50 dark:bg-green-900/30 border border-green-200 dark:border-green-700 text-green-800 dark:text-green-300 px-4 py-3 rounded-lg text-sm\">\n                    {successMessage}\n                  </div>\n                )}\n\n                <Input\n                  label=\"Full Name\"\n                  type=\"text\"\n                  value={registerData.fullName}\n                  onChange={(e) => setRegisterData({ ...registerData, fullName: e.target.value })}\n                  placeholder=\"John Doe\"\n                  required\n                  autoComplete=\"name\"\n                />\n\n                <Input\n                  label=\"Email\"\n                  type=\"email\"\n                  value={registerData.email}\n                  onChange={(e) => setRegisterData({ ...registerData, email: e.target.value })}\n                  placeholder=\"admin@example.com\"\n                  required\n                  autoComplete=\"email\"\n                />\n\n                <Input\n                  label=\"Password\"\n                  type=\"password\"\n                  value={registerData.password}\n                  onChange={(e) => setRegisterData({ ...registerData, password: e.target.value })}\n                  placeholder=\"••••••••\"\n                  required\n                  autoComplete=\"new-password\"\n                  helpText=\"Minimum 8 characters\"\n                />\n\n                <Input\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  value={registerData.confirmPassword}\n                  onChange={(e) => setRegisterData({ ...registerData, confirmPassword: e.target.value })}\n                  placeholder=\"••••••••\"\n                  required\n                  autoComplete=\"new-password\"\n                />\n\n                <Button type=\"submit\" className=\"w-full\" loading={loading}>\n                  Create Account\n                </Button>\n\n                <div className=\"text-center\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowRegister(false)\n                      setError('')\n                      setSuccessMessage('')\n                    }}\n                    className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline\"\n                  >\n                    Already have an account? Sign in\n                  </button>\n                </div>\n              </form>\n            ) : (\n              <form onSubmit={handleLogin} className=\"space-y-4\">\n                {error && (\n                  <div className=\"bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-700 text-red-800 dark:text-red-300 px-4 py-3 rounded-lg text-sm\">\n                    {error}\n                  </div>\n                )}\n\n                {successMessage && (\n                  <div className=\"bg-green-50 dark:bg-green-900/30 border border-green-200 dark:border-green-700 text-green-800 dark:text-green-300 px-4 py-3 rounded-lg text-sm\">\n                    {successMessage}\n                  </div>\n                )}\n\n                <Input\n                  label=\"Email\"\n                  type=\"email\"\n                  value={credentials.email}\n                  onChange={(e) => setCredentials({ ...credentials, email: e.target.value })}\n                  placeholder=\"admin@example.com\"\n                  required\n                  autoComplete=\"email\"\n                />\n\n                <Input\n                  label=\"Password\"\n                  type=\"password\"\n                  value={credentials.password}\n                  onChange={(e) => setCredentials({ ...credentials, password: e.target.value })}\n                  placeholder=\"••••••••\"\n                  required\n                  autoComplete=\"current-password\"\n                />\n\n                <Button type=\"submit\" className=\"w-full\" loading={loading}>\n                  Sign In\n                </Button>\n\n                <div className=\"text-center pt-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowRegister(true)\n                      setError('')\n                      setSuccessMessage('')\n                    }}\n                    className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline\"\n                  >\n                    Don't have an account? Create one\n                  </button>\n                </div>\n              </form>\n            )}\n          </CardContent>\n        </Card>\n\n        <p className=\"text-center text-sm text-gray-600 dark:text-gray-400 mt-6\">\n          Protected by Supabase Authentication & MFA\n        </p>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}