{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Card.tsx"],"sourcesContent":["import React from 'react'\n\ninterface CardProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function Card({ children, className = '' }: CardProps) {\n  return (\n    <div className={`bg-gray-100 dark:bg-gray-800 rounded-lg shadow-sm border border-gray-300 dark:border-gray-700 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardHeader({ children, className = '' }: CardHeaderProps) {\n  return (\n    <div className={`px-6 py-4 border-b border-gray-200 dark:border-gray-700 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardTitle({ children, className = '' }: CardTitleProps) {\n  return (\n    <h3 className={`text-lg font-bold gradient-text ${className}`}>\n      {children}\n    </h3>\n  )\n}\n\ninterface CardContentProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardContent({ children, className = '' }: CardContentProps) {\n  return (\n    <div className={`px-6 py-4 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardFooter({ children, className = '' }: CardFooterProps) {\n  return (\n    <div className={`px-6 py-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 rounded-b-lg ${className}`}>\n      {children}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAOO,SAAS,KAAK,KAAuC;QAAvC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAa,GAAvC;IACnB,qBACE,6LAAC;QAAI,WAAW,AAAC,iGAA0G,OAAV;kBAC9G;;;;;;AAGP;KANgB;AAaT,SAAS,WAAW,KAA6C;QAA7C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAmB,GAA7C;IACzB,qBACE,6LAAC;QAAI,WAAW,AAAC,2DAAoE,OAAV;kBACxE;;;;;;AAGP;MANgB;AAaT,SAAS,UAAU,KAA4C;QAA5C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAkB,GAA5C;IACxB,qBACE,6LAAC;QAAG,WAAW,AAAC,mCAA4C,OAAV;kBAC/C;;;;;;AAGP;MANgB;AAaT,SAAS,YAAY,KAA8C;QAA9C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAoB,GAA9C;IAC1B,qBACE,6LAAC;QAAI,WAAW,AAAC,aAAsB,OAAV;kBAC1B;;;;;;AAGP;MANgB;AAaT,SAAS,WAAW,KAA6C;QAA7C,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAmB,GAA7C;IACzB,qBACE,6LAAC;QAAI,WAAW,AAAC,oGAA6G,OAAV;kBACjH;;;;;;AAGP;MANgB","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Button.tsx"],"sourcesContent":["import React from 'react'\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger' | 'ghost'\n  size?: 'sm' | 'md' | 'lg'\n  loading?: boolean\n  children: React.ReactNode\n}\n\nexport function Button({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  disabled,\n  children,\n  className = '',\n  ...props\n}: ButtonProps) {\n  const baseStyles = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2'\n\n  const variants = {\n    primary: 'bg-blue-600 dark:bg-blue-500 text-white hover:bg-blue-700 dark:hover:bg-blue-600 focus:ring-blue-500 disabled:bg-blue-300 dark:disabled:bg-blue-800',\n    secondary: 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-gray-600 focus:ring-gray-500 disabled:bg-gray-100 dark:disabled:bg-gray-800',\n    danger: 'bg-red-600 dark:bg-red-500 text-white hover:bg-red-700 dark:hover:bg-red-600 focus:ring-red-500 disabled:bg-red-300 dark:disabled:bg-red-800',\n    ghost: 'bg-transparent text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:ring-gray-500'\n  }\n\n  const sizes = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  }\n\n  return (\n    <button\n      className={`${baseStyles} ${variants[variant]} ${sizes[size]} ${className} ${\n        (disabled || loading) ? 'cursor-not-allowed opacity-50' : ''\n      }`}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && (\n        <svg\n          className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      )}\n      {children}\n    </button>\n  )\n}\n"],"names":[],"mappings":";;;;;;AASO,SAAS,OAAO,KAQT;QARS,EACrB,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,QAAQ,EACR,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACS,GARS;IASrB,MAAM,aAAa;IAEnB,MAAM,WAAW;QACf,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;IACT;IAEA,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,6LAAC;QACC,WAAW,AAAC,GAAgB,OAAd,YAAW,KAAwB,OAArB,QAAQ,CAAC,QAAQ,EAAC,KAAkB,OAAf,KAAK,CAAC,KAAK,EAAC,KAC3D,OAD8D,WAAU,KAEzE,OADC,AAAC,YAAY,UAAW,kCAAkC;QAE5D,UAAU,YAAY;QACrB,GAAG,KAAK;;YAER,yBACC,6LAAC;gBACC,WAAU;gBACV,OAAM;gBACN,MAAK;gBACL,SAAQ;;kCAER,6LAAC;wBACC,WAAU;wBACV,IAAG;wBACH,IAAG;wBACH,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,GAAE;;;;;;;;;;;;YAIP;;;;;;;AAGP;KAzDgB","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Badge.tsx"],"sourcesContent":["import React from 'react'\n\ninterface BadgeProps {\n  children: React.ReactNode\n  color?: 'gray' | 'blue' | 'green' | 'red' | 'yellow'\n  className?: string\n}\n\nexport function Badge({ children, color = 'gray', className = '' }: BadgeProps) {\n  const colors = {\n    gray: 'bg-gray-100 text-gray-800',\n    blue: 'bg-blue-100 text-blue-800',\n    green: 'bg-green-100 text-green-800',\n    red: 'bg-red-100 text-red-800',\n    yellow: 'bg-yellow-100 text-yellow-800'\n  }\n\n  return (\n    <span\n      className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colors[color]} ${className}`}\n    >\n      {children}\n    </span>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAQO,SAAS,MAAM,KAAwD;QAAxD,EAAE,QAAQ,EAAE,QAAQ,MAAM,EAAE,YAAY,EAAE,EAAc,GAAxD;IACpB,MAAM,SAAS;QACb,MAAM;QACN,MAAM;QACN,OAAO;QACP,KAAK;QACL,QAAQ;IACV;IAEA,qBACE,6LAAC;QACC,WAAW,AAAC,2EAA2F,OAAjB,MAAM,CAAC,MAAM,EAAC,KAAa,OAAV;kBAEtG;;;;;;AAGP;KAhBgB","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Modal.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect } from 'react'\nimport { X } from 'lucide-react'\n\ninterface ModalProps {\n  isOpen: boolean\n  onClose: () => void\n  title: string\n  children: React.ReactNode\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n}\n\nexport function Modal({\n  isOpen,\n  onClose,\n  title,\n  children,\n  size = 'md'\n}: ModalProps) {\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') onClose()\n    }\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'hidden'\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'unset'\n    }\n  }, [isOpen, onClose])\n\n  if (!isOpen) return null\n\n  const sizes = {\n    sm: 'max-w-md',\n    md: 'max-w-lg',\n    lg: 'max-w-2xl',\n    xl: 'max-w-4xl'\n  }\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      {/* Backdrop */}\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={onClose}\n      />\n\n      {/* Modal */}\n      <div className=\"flex min-h-full items-center justify-center p-4\">\n        <div\n          className={`relative bg-gray-100 dark:bg-gray-800 rounded-lg shadow-xl ${sizes[size]} w-full`}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {/* Header */}\n          <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-300 dark:border-gray-700\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">{title}</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n\n          {/* Content */}\n          <div className=\"px-6 py-4\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAaO,SAAS,MAAM,KAMT;QANS,EACpB,MAAM,EACN,OAAO,EACP,KAAK,EACL,QAAQ,EACR,OAAO,IAAI,EACA,GANS;;IAOpB,IAAA,0KAAS;2BAAC;YACR,MAAM;gDAAe,CAAC;oBACpB,IAAI,EAAE,GAAG,KAAK,UAAU;gBAC1B;;YAEA,IAAI,QAAQ;gBACV,SAAS,gBAAgB,CAAC,WAAW;gBACrC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;YACjC;YAEA;mCAAO;oBACL,SAAS,mBAAmB,CAAC,WAAW;oBACxC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;gBACjC;;QACF;0BAAG;QAAC;QAAQ;KAAQ;IAEpB,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBACC,WAAU;gBACV,SAAS;;;;;;0BAIX,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAW,AAAC,8DAAyE,OAAZ,KAAK,CAAC,KAAK,EAAC;oBACrF,SAAS,CAAC,IAAM,EAAE,eAAe;;sCAGjC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAA0D;;;;;;8CACxE,6LAAC;oCACC,SAAS;oCACT,WAAU;8CAEV,cAAA,6LAAC,oMAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAKjB,6LAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;;;;;;;;;;;;;AAMb;GAjEgB;KAAA","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Input.tsx"],"sourcesContent":["import React from 'react'\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  helpText?: string // Add support for helpText (alias for helperText)\n}\n\nexport function Input({\n  label,\n  error,\n  helperText,\n  helpText,\n  className = '',\n  ...props\n}: InputProps) {\n  // Use either helperText or helpText\n  const helper = helperText || helpText\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <input\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helper && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helper}</p>\n      )}\n    </div>\n  )\n}\n\ninterface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  label?: string\n  error?: string\n  helperText?: string\n}\n\nexport function Textarea({\n  label,\n  error,\n  helperText,\n  className = '',\n  ...props\n}: TextareaProps) {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <textarea\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helperText}</p>\n      )}\n    </div>\n  )\n}\n\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  options: Array<{ value: string | number; label: string }>\n}\n\nexport function Select({\n  label,\n  error,\n  helperText,\n  options,\n  className = '',\n  ...props\n}: SelectProps) {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <select\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      >\n        {options.map(option => (\n          <option key={option.value} value={option.value} className=\"bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\">\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helperText}</p>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;AASO,SAAS,MAAM,KAOT;QAPS,EACpB,KAAK,EACL,KAAK,EACL,UAAU,EACV,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACQ,GAPS;IAQpB,oCAAoC;IACpC,MAAM,SAAS,cAAc;IAE7B,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;;;;;;YAEV,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,UAAU,CAAC,uBACV,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;KAhCgB;AAwCT,SAAS,SAAS,KAMT;QANS,EACvB,KAAK,EACL,KAAK,EACL,UAAU,EACV,YAAY,EAAE,EACd,GAAG,OACW,GANS;IAOvB,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;;;;;;YAEV,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,cAAc,CAAC,uBACd,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;MA5BgB;AAqCT,SAAS,OAAO,KAOT;QAPS,EACrB,KAAK,EACL,KAAK,EACL,UAAU,EACV,OAAO,EACP,YAAY,EAAE,EACd,GAAG,OACS,GAPS;IAQrB,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,6LAAC;gBACC,WAAW,AAAC,uJAER,OADF,QAAQ,mBAAmB,wCAC5B,KAAa,OAAV;gBACH,GAAG,KAAK;0BAER,QAAQ,GAAG,CAAC,CAAA,uBACX,6LAAC;wBAA0B,OAAO,OAAO,KAAK;wBAAE,WAAU;kCACvD,OAAO,KAAK;uBADF,OAAO,KAAK;;;;;;;;;;YAK5B,uBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,cAAc,CAAC,uBACd,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;MAnCgB","debugId":null}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/lib/services/stripeInvoiceService.ts"],"sourcesContent":["import Stripe from 'stripe'\nimport { supabase } from '../supabase'\n\nclass StripeInvoiceService {\n  private stripe: Stripe | null = null\n  private testMode: boolean = true\n\n  /**\n   * Initialize Stripe with API keys from settings\n   */\n  async initialize(userId: string): Promise<boolean> {\n    try {\n      // Load Stripe settings from database\n      const { data: settings, error } = await supabase\n        .from('billing_settings')\n        .select('stripe_api_key_encrypted, stripe_test_mode')\n        .eq('user_id', userId)\n        .single()\n\n      if (error || !settings || !settings.stripe_api_key_encrypted) {\n        console.warn('No Stripe API key configured')\n        return false\n      }\n\n      // Decrypt API key\n      const apiKey = await this.decryptApiKey(settings.stripe_api_key_encrypted)\n\n      this.stripe = new Stripe(apiKey, {\n        apiVersion: '2025-09-30.clover',\n        typescript: true\n      })\n\n      this.testMode = settings.stripe_test_mode\n\n      console.log('Stripe initialized:', this.testMode ? 'Test Mode' : 'Live Mode')\n      return true\n\n    } catch (error) {\n      console.error('Failed to initialize Stripe:', error)\n      return false\n    }\n  }\n\n  /**\n   * Test Stripe connection\n   */\n  async testConnection(): Promise<{ success: boolean; message: string }> {\n    if (!this.stripe) {\n      return { success: false, message: 'Stripe not initialized' }\n    }\n\n    try {\n      await this.stripe.customers.list({ limit: 1 })\n\n      return {\n        success: true,\n        message: `Connected successfully (${this.testMode ? 'Test Mode' : 'Live Mode'})`\n      }\n    } catch (error) {\n      if (error instanceof Stripe.errors.StripeAuthenticationError) {\n        return { success: false, message: 'Invalid API key' }\n      }\n\n      return {\n        success: false,\n        message: error instanceof Error ? error.message : 'Connection failed'\n      }\n    }\n  }\n\n  /**\n   * Create Stripe customer\n   */\n  async createCustomer(customerData: {\n    email: string\n    name: string\n    phone?: string\n    address?: string\n    metadata?: Record<string, string>\n  }): Promise<{ success: boolean; customerId?: string; error?: string }> {\n    if (!this.stripe) {\n      return { success: false, error: 'Stripe not initialized' }\n    }\n\n    try {\n      const customer = await this.stripe.customers.create({\n        email: customerData.email,\n        name: customerData.name,\n        phone: customerData.phone,\n        address: customerData.address ? {\n          line1: customerData.address\n        } : undefined,\n        metadata: {\n          ...customerData.metadata,\n          nexasync_created_at: new Date().toISOString()\n        }\n      })\n\n      return { success: true, customerId: customer.id }\n\n    } catch (error) {\n      console.error('Failed to create Stripe customer:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to create customer'\n      }\n    }\n  }\n\n  /**\n   * Create invoice with line items\n   */\n  async createInvoice(params: {\n    stripeCustomerId: string\n    lineItems: Array<{\n      description: string\n      amount: number // In cents\n      currency: string\n    }>\n    dueInDays: number\n    metadata?: Record<string, string>\n    autoAdvance?: boolean\n  }): Promise<{ success: boolean; invoice?: Stripe.Invoice; error?: string }> {\n    if (!this.stripe) {\n      return { success: false, error: 'Stripe not initialized' }\n    }\n\n    try {\n      // Create invoice\n      const invoice = await this.stripe.invoices.create({\n        customer: params.stripeCustomerId,\n        collection_method: 'send_invoice',\n        days_until_due: params.dueInDays,\n        auto_advance: params.autoAdvance ?? false,\n        metadata: params.metadata || {}\n      })\n\n      // Add line items\n      for (const item of params.lineItems) {\n        await this.stripe.invoiceItems.create({\n          customer: params.stripeCustomerId,\n          invoice: invoice.id,\n          description: item.description,\n          amount: item.amount,\n          currency: item.currency\n        })\n      }\n\n      return { success: true, invoice }\n\n    } catch (error) {\n      console.error('Failed to create invoice:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to create invoice'\n      }\n    }\n  }\n\n  /**\n   * Finalize invoice (make it immutable and ready to send)\n   */\n  async finalizeInvoice(invoiceId: string): Promise<{ success: boolean; error?: string }> {\n    if (!this.stripe) {\n      return { success: false, error: 'Stripe not initialized' }\n    }\n\n    try {\n      await this.stripe.invoices.finalizeInvoice(invoiceId)\n      return { success: true }\n\n    } catch (error) {\n      console.error('Failed to finalize invoice:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to finalize invoice'\n      }\n    }\n  }\n\n  /**\n   * Send invoice to customer\n   */\n  async sendInvoice(invoiceId: string): Promise<{ success: boolean; error?: string }> {\n    if (!this.stripe) {\n      return { success: false, error: 'Stripe not initialized' }\n    }\n\n    try {\n      await this.stripe.invoices.sendInvoice(invoiceId)\n      return { success: true }\n\n    } catch (error) {\n      console.error('Failed to send invoice:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to send invoice'\n      }\n    }\n  }\n\n  /**\n   * Mark invoice as paid (manually)\n   */\n  async markInvoiceAsPaid(invoiceId: string): Promise<{ success: boolean; error?: string }> {\n    if (!this.stripe) {\n      return { success: false, error: 'Stripe not initialized' }\n    }\n\n    try {\n      await this.stripe.invoices.pay(invoiceId, {\n        paid_out_of_band: true // Mark as paid outside of Stripe\n      })\n      return { success: true }\n\n    } catch (error) {\n      console.error('Failed to mark invoice as paid:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to mark as paid'\n      }\n    }\n  }\n\n  /**\n   * Void/cancel invoice\n   */\n  async voidInvoice(invoiceId: string): Promise<{ success: boolean; error?: string }> {\n    if (!this.stripe) {\n      return { success: false, error: 'Stripe not initialized' }\n    }\n\n    try {\n      await this.stripe.invoices.voidInvoice(invoiceId)\n      return { success: true }\n\n    } catch (error) {\n      console.error('Failed to void invoice:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to void invoice'\n      }\n    }\n  }\n\n  /**\n   * Decrypt API key from storage\n   * TODO: Implement proper encryption/decryption\n   */\n  async decryptApiKey(encrypted: string): Promise<string> {\n    // For now, assume it's base64 encoded\n    // In production, use proper encryption (AES-256-GCM)\n    try {\n      return Buffer.from(encrypted, 'base64').toString('utf-8')\n    } catch {\n      // If not base64, assume it's plain text (for dev purposes)\n      return encrypted\n    }\n  }\n\n  /**\n   * Encrypt API key for storage\n   */\n  async encryptApiKey(plaintext: string): Promise<string> {\n    // For now, use base64 encoding\n    // In production, use proper encryption (AES-256-GCM)\n    return Buffer.from(plaintext, 'utf-8').toString('base64')\n  }\n}\n\nexport const stripeInvoiceService = new StripeInvoiceService()\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 762, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/lib/utils/format.ts"],"sourcesContent":["/**\n * Format a number as CAD currency\n */\nexport function formatCAD(amount: number | null | undefined): string {\n  if (amount === null || amount === undefined || isNaN(amount)) return '$0.00'\n  return new Intl.NumberFormat('en-CA', {\n    style: 'currency',\n    currency: 'CAD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount)\n}\n\n/**\n * Format a date\n */\nexport function formatDate(date: string | Date | null | undefined): string {\n  if (!date) return 'N/A'\n  const d = typeof date === 'string' ? new Date(date) : date\n  if (isNaN(d.getTime())) return 'Invalid Date'\n  return new Intl.DateTimeFormat('en-CA', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).format(d)\n}\n\n/**\n * Format a date range\n */\nexport function formatDateRange(range: { start: Date | string; end: Date | string }): string {\n  return `${formatDate(range.start)} - ${formatDate(range.end)}`\n}\n\n/**\n * Format a number with commas\n */\nexport function formatNumber(num: number): string {\n  return new Intl.NumberFormat('en-US').format(num)\n}\n\n/**\n * Get date suffix (1st, 2nd, 3rd, etc.)\n */\nexport function getDaySuffix(day: number): string {\n  if (day >= 11 && day <= 13) return 'th'\n\n  switch (day % 10) {\n    case 1: return 'st'\n    case 2: return 'nd'\n    case 3: return 'rd'\n    default: return 'th'\n  }\n}\n\n/**\n * Get previous month date range\n */\nexport function getPreviousMonthRange(): { start: Date; end: Date } {\n  const now = new Date()\n  const start = new Date(now.getFullYear(), now.getMonth() - 1, 1)\n  const end = new Date(now.getFullYear(), now.getMonth(), 0)\n  return { start, end }\n}\n\n/**\n * Get current month date range\n */\nexport function getCurrentMonthRange(): { start: Date; end: Date } {\n  const now = new Date()\n  const start = new Date(now.getFullYear(), now.getMonth(), 1)\n  const end = new Date()\n  return { start, end }\n}\n\n/**\n * Convert data to CSV format\n */\nexport function convertToCSV(data: Record<string, any>[]): string {\n  if (data.length === 0) return ''\n\n  const headers = Object.keys(data[0])\n  const csvRows = []\n\n  // Add header row\n  csvRows.push(headers.join(','))\n\n  // Add data rows\n  for (const row of data) {\n    const values = headers.map(header => {\n      const value = row[header]\n      // Escape quotes and wrap in quotes if contains comma\n      const escaped = String(value).replace(/\"/g, '\"\"')\n      return escaped.includes(',') ? `\"${escaped}\"` : escaped\n    })\n    csvRows.push(values.join(','))\n  }\n\n  return csvRows.join('\\n')\n}\n\n/**\n * Download a file\n */\nexport function downloadFile(content: string, filename: string, mimeType: string = 'text/plain') {\n  const blob = new Blob([content], { type: mimeType })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n  URL.revokeObjectURL(url)\n}\n\n/**\n * Truncate text with ellipsis\n */\nexport function truncate(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text\n  return text.substring(0, maxLength - 3) + '...'\n}\n\n/**\n * Get initials from name\n */\nexport function getInitials(name: string): string {\n  return name\n    .split(' ')\n    .map(word => word[0])\n    .join('')\n    .toUpperCase()\n    .substring(0, 2)\n}\n\n/**\n * Calculate percentage\n */\nexport function calculatePercentage(value: number, total: number): number {\n  if (total === 0) return 0\n  return (value / total) * 100\n}\n\n/**\n * Calculate trend percentage\n */\nexport function calculateTrend(current: number, previous: number): number {\n  if (previous === 0) return current > 0 ? 100 : 0\n  return ((current - previous) / previous) * 100\n}\n\n/**\n * Format percentage\n */\nexport function formatPercentage(value: number, decimals: number = 1): string {\n  return `${value.toFixed(decimals)}%`\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/app/admin/billing/invoices/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { Search, Download, Eye, Send, CheckCircle, ExternalLink, Plus } from 'lucide-react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card'\nimport { Button } from '@/components/ui/Button'\nimport { Badge } from '@/components/ui/Badge'\nimport { Modal } from '@/components/ui/Modal'\nimport { Select } from '@/components/ui/Input'\nimport { supabase } from '@/lib/supabase'\nimport { stripeInvoiceService } from '@/lib/services/stripeInvoiceService'\nimport type { InvoiceRecord } from '@/lib/types/billing'\nimport { formatCAD, formatDate, convertToCSV, downloadFile } from '@/lib/utils/format'\nimport Link from 'next/link'\nimport { useNotification } from '@/components/ui/Notification'\n\ninterface InvoiceWithCustomer extends InvoiceRecord {\n  billing_customers?: {\n    customer_name: string\n    customer_email: string\n  } | null\n}\n\nexport default function InvoicesPage() {\n  const { showNotification, showConfirm } = useNotification()\n  const [invoices, setInvoices] = useState<InvoiceWithCustomer[]>([])\n  const [filteredInvoices, setFilteredInvoices] = useState<InvoiceWithCustomer[]>([])\n  const [loading, setLoading] = useState(true)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [statusFilter, setStatusFilter] = useState('all')\n  const [selectedInvoice, setSelectedInvoice] = useState<InvoiceWithCustomer | null>(null)\n  const [showDetailModal, setShowDetailModal] = useState(false)\n\n  useEffect(() => {\n    loadInvoices()\n  }, [])\n\n  const filterInvoices = useCallback(() => {\n    let filtered = invoices\n\n    // Status filter\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(inv => inv.invoice_status === statusFilter)\n    }\n\n    // Search filter\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase()\n      filtered = filtered.filter(inv =>\n        inv.invoice_number?.toLowerCase().includes(query) ||\n        inv.billing_customers?.customer_name?.toLowerCase().includes(query) ||\n        inv.billing_customers?.customer_email?.toLowerCase().includes(query)\n      )\n    }\n\n    setFilteredInvoices(filtered)\n  }, [invoices, statusFilter, searchQuery])\n\n  useEffect(() => {\n    filterInvoices()\n  }, [filterInvoices])\n\n  async function loadInvoices() {\n    setLoading(true)\n    try {\n      const { data, error } = await supabase\n        .from('invoice_records')\n        .select(`\n          *,\n          billing_customers(customer_name, customer_email)\n        `)\n        .order('created_at', { ascending: false })\n\n      if (error) throw error\n      setInvoices(data || [])\n    } catch (error) {\n      console.error('Failed to load invoices:', error)\n      setInvoices([])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  function getStatusColor(status: string): 'gray' | 'blue' | 'green' | 'red' | 'yellow' {\n    const colors: Record<string, 'gray' | 'blue' | 'green' | 'red' | 'yellow'> = {\n      draft: 'gray',\n      sent: 'blue',\n      paid: 'green',\n      overdue: 'red',\n      cancelled: 'gray'\n    }\n    return colors[status] || 'gray'\n  }\n\n  function viewDetails(invoice: InvoiceWithCustomer) {\n    setSelectedInvoice(invoice)\n    setShowDetailModal(true)\n  }\n\n  async function sendInvoice(invoice: InvoiceWithCustomer) {\n    showConfirm(`Send invoice to ${invoice.billing_customers?.customer_name}?`, async () => {\n      try {\n        if (!invoice.stripe_invoice_id) {\n          throw new Error('No Stripe invoice ID found')\n        }\n\n        const result = await stripeInvoiceService.sendInvoice(invoice.stripe_invoice_id)\n        if (!result.success) throw new Error(result.error)\n\n        // Update database\n        await supabase\n          .from('invoice_records')\n          .update({\n            invoice_status: 'sent',\n            sent_at: new Date().toISOString()\n          })\n          .eq('id', invoice.id)\n\n        showNotification('Invoice sent successfully', 'success')\n        loadInvoices()\n      } catch (error) {\n        console.error('Failed to send invoice:', error)\n        showNotification(`Failed to send invoice: ${error instanceof Error ? error.message : 'Unknown error'}`, 'error')\n      }\n    })\n  }\n\n  async function markAsPaid(invoice: InvoiceWithCustomer) {\n    showConfirm(`Mark invoice as paid for ${invoice.billing_customers?.customer_name}?`, async () => {\n      try {\n        await supabase\n          .from('invoice_records')\n          .update({\n            invoice_status: 'paid',\n            paid_at: new Date().toISOString()\n          })\n          .eq('id', invoice.id)\n\n        showNotification('Invoice marked as paid', 'success')\n        loadInvoices()\n      } catch (error) {\n        console.error('Failed to mark invoice as paid:', error)\n        showNotification('Failed to mark invoice as paid', 'error')\n      }\n    })\n  }\n\n  function exportToCSV() {\n    const csvData = filteredInvoices.map(invoice => ({\n      'Invoice Number': invoice.invoice_number || invoice.stripe_invoice_id?.slice(0, 8) || 'N/A',\n      'Date Created': formatDate(invoice.created_at),\n      'Customer Name': invoice.billing_customers?.customer_name || 'N/A',\n      'Customer Email': invoice.billing_customers?.customer_email || 'N/A',\n      'Period Start': formatDate(invoice.billing_period_start),\n      'Period End': formatDate(invoice.billing_period_end),\n      'Total Chats': invoice.total_chats || 0,\n      'Total Calls': invoice.total_calls || 0,\n      'SMS Segments': invoice.total_sms_segments || 0,\n      'Call Minutes': (invoice.total_call_minutes || 0).toFixed(1),\n      'Twilio SMS Cost (CAD)': (invoice.twilio_sms_cost_cad || 0).toFixed(2),\n      'Twilio Voice Cost (CAD)': (invoice.twilio_voice_cost_cad || 0).toFixed(2),\n      'Retell AI Chat Cost (CAD)': (invoice.retell_ai_chat_cost_cad || 0).toFixed(2),\n      'Retell AI Voice Cost (CAD)': (invoice.retell_ai_voice_cost_cad || 0).toFixed(2),\n      'Subtotal (CAD)': (invoice.subtotal_cad || 0).toFixed(2),\n      'Markup Amount (CAD)': (invoice.markup_amount_cad || 0).toFixed(2),\n      'Total Amount (CAD)': (invoice.total_amount_cad || 0).toFixed(2),\n      'Status': invoice.invoice_status,\n      'Sent Date': invoice.sent_at ? formatDate(invoice.sent_at) : '',\n      'Paid Date': invoice.paid_at ? formatDate(invoice.paid_at) : ''\n    }))\n\n    const csv = convertToCSV(csvData)\n    downloadFile(csv, `invoices_${Date.now()}.csv`, 'text/csv')\n  }\n\n  if (loading) {\n    return (\n      <div className=\"p-4 md:p-6 lg:p-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 md:h-8 bg-gray-200 dark:bg-gray-700 rounded w-1/2 md:w-1/4 mb-6 md:mb-8\"></div>\n          <div className=\"h-64 md:h-96 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-4 md:p-6 lg:p-8\">\n      <div className=\"mb-6 md:mb-8 flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4\">\n        <div>\n          <h1 className=\"text-2xl md:text-3xl font-black gradient-text\">Invoice History</h1>\n          <p className=\"text-sm md:text-base text-gray-600 dark:text-gray-400 mt-1 md:mt-2\">View and manage all invoices</p>\n        </div>\n        <div className=\"flex flex-wrap gap-2\">\n          <Link href=\"/admin/billing/invoices/generate\">\n            <Button size=\"sm\" className=\"md:text-base md:px-6 md:py-3\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              <span className=\"hidden sm:inline\">Generate Invoices</span>\n              <span className=\"sm:hidden\">Generate</span>\n            </Button>\n          </Link>\n          <Button variant=\"secondary\" onClick={exportToCSV} size=\"sm\" className=\"md:text-base md:px-6 md:py-3\">\n            <Download className=\"w-4 h-4 mr-2\" />\n            <span className=\"hidden sm:inline\">Export CSV</span>\n            <span className=\"sm:hidden\">Export</span>\n          </Button>\n        </div>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <div className=\"flex flex-col gap-3 sm:gap-4\">\n            <CardTitle className=\"text-base md:text-lg\">Invoices ({filteredInvoices.length})</CardTitle>\n            <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4\">\n              <Select\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value)}\n                options={[\n                  { value: 'all', label: 'All Statuses' },\n                  { value: 'draft', label: 'Draft' },\n                  { value: 'sent', label: 'Sent' },\n                  { value: 'paid', label: 'Paid' },\n                  { value: 'overdue', label: 'Overdue' },\n                  { value: 'cancelled', label: 'Cancelled' }\n                ]}\n                className=\"w-full sm:w-auto\"\n              />\n              <div className=\"relative flex-1 sm:flex-none sm:w-64\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search invoices...\"\n                  className=\"w-full pl-10 pr-4 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto -mx-4 md:mx-0\">\n            <table className=\"w-full min-w-[1000px]\">\n              <thead>\n                <tr className=\"border-b border-gray-200 dark:border-gray-700\">\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Invoice #</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Created</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Customer</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Period</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Usage</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Amount</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Status</th>\n                  <th className=\"text-right py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredInvoices.length === 0 ? (\n                  <tr>\n                    <td colSpan={8} className=\"text-center py-6 md:py-8 text-gray-500 dark:text-gray-400 text-sm\">\n                      {searchQuery || statusFilter !== 'all'\n                        ? 'No invoices found matching your filters'\n                        : 'No invoices yet. Generate your first invoice to get started.'}\n                    </td>\n                  </tr>\n                ) : (\n                  filteredInvoices.map((invoice) => (\n                    <tr\n                      key={invoice.id}\n                      className=\"border-b border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer\"\n                      onClick={() => viewDetails(invoice)}\n                    >\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-mono text-gray-900 dark:text-gray-100\">\n                        {invoice.invoice_number || invoice.stripe_invoice_id?.slice(0, 8) || 'N/A'}\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-900 dark:text-gray-100\">{formatDate(invoice.created_at)}</td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-900 dark:text-gray-100\">\n                        {invoice.billing_customers?.customer_name || 'Unknown Customer'}\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-600 dark:text-gray-400\">\n                        {formatDate(invoice.billing_period_start)} - {formatDate(invoice.billing_period_end)}\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-900 dark:text-gray-100\">\n                        <div className=\"text-xs\">\n                          <div>{invoice.total_chats || 0} chats</div>\n                          <div className=\"text-gray-500 dark:text-gray-400\">{invoice.total_sms_segments || 0} segments</div>\n                        </div>\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-semibold text-gray-900 dark:text-gray-100\">\n                        {formatCAD(Number(invoice.total_amount_cad || 0))}\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm\">\n                        <Badge color={getStatusColor(invoice.invoice_status)}>\n                          {invoice.invoice_status}\n                        </Badge>\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm\" onClick={(e) => e.stopPropagation()}>\n                        <div className=\"flex items-center justify-end gap-2\">\n                          <button\n                            onClick={() => viewDetails(invoice)}\n                            className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-500\"\n                            title=\"View Details\"\n                          >\n                            <Eye className=\"w-4 h-4\" />\n                          </button>\n                          {invoice.invoice_status === 'draft' && (\n                            <button\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                sendInvoice(invoice)\n                              }}\n                              className=\"text-green-600 hover:text-green-700\"\n                              title=\"Send Invoice\"\n                            >\n                              <Send className=\"w-4 h-4\" />\n                            </button>\n                          )}\n                          {invoice.invoice_status === 'sent' && (\n                            <button\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                markAsPaid(invoice)\n                              }}\n                              className=\"text-green-600 hover:text-green-700\"\n                              title=\"Mark as Paid\"\n                            >\n                              <CheckCircle className=\"w-4 h-4\" />\n                            </button>\n                          )}\n                          {invoice.stripe_invoice_url && (\n                            <a\n                              href={invoice.stripe_invoice_url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"text-gray-600 hover:text-gray-700\"\n                              title=\"View in Stripe\"\n                              onClick={(e) => e.stopPropagation()}\n                            >\n                              <ExternalLink className=\"w-4 h-4\" />\n                            </a>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Invoice Detail Modal */}\n      {selectedInvoice && (\n        <Modal\n          isOpen={showDetailModal}\n          onClose={() => setShowDetailModal(false)}\n          title={`Invoice ${selectedInvoice.invoice_number || 'Details'}`}\n          size=\"xl\"\n        >\n          <div className=\"space-y-6\">\n            {/* Customer Information */}\n            <div>\n              <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-gray-100\">Customer Information</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Customer Name</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedInvoice.billing_customers?.customer_name || 'Unknown Customer'}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Email</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedInvoice.billing_customers?.customer_email || 'N/A'}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Billing Period</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">\n                    {formatDate(selectedInvoice.billing_period_start)} - {formatDate(selectedInvoice.billing_period_end)}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Status</p>\n                  <Badge color={getStatusColor(selectedInvoice.invoice_status)}>\n                    {selectedInvoice.invoice_status}\n                  </Badge>\n                </div>\n              </div>\n            </div>\n\n            {/* Usage Summary */}\n            <div>\n              <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-gray-100\">Usage Summary</h3>\n              <div className=\"grid grid-cols-4 gap-4\">\n                <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Chats</p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{selectedInvoice.total_chats || 0}</p>\n                </div>\n                <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Calls</p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{selectedInvoice.total_calls || 0}</p>\n                </div>\n                <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">SMS Segments</p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{selectedInvoice.total_sms_segments || 0}</p>\n                </div>\n                <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Call Minutes</p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{(selectedInvoice.total_call_minutes || 0).toFixed(1)}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Cost Breakdown */}\n            <div>\n              <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-gray-100\">Cost Breakdown</h3>\n              <table className=\"w-full\">\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                  <tr>\n                    <td className=\"py-2 text-gray-900 dark:text-gray-100\">Twilio SMS Services</td>\n                    <td className=\"py-2 text-right text-gray-900 dark:text-gray-100\">{formatCAD(Number(selectedInvoice.twilio_sms_cost_cad || 0))}</td>\n                  </tr>\n                  <tr>\n                    <td className=\"py-2 text-gray-900 dark:text-gray-100\">Twilio Voice Services</td>\n                    <td className=\"py-2 text-right text-gray-900 dark:text-gray-100\">{formatCAD(Number(selectedInvoice.twilio_voice_cost_cad || 0))}</td>\n                  </tr>\n                  <tr>\n                    <td className=\"py-2 text-gray-900 dark:text-gray-100\">Retell AI Chat Services</td>\n                    <td className=\"py-2 text-right text-gray-900 dark:text-gray-100\">{formatCAD(Number(selectedInvoice.retell_ai_chat_cost_cad || 0))}</td>\n                  </tr>\n                  <tr>\n                    <td className=\"py-2 text-gray-900 dark:text-gray-100\">Retell AI Voice Services</td>\n                    <td className=\"py-2 text-right text-gray-900 dark:text-gray-100\">{formatCAD(Number(selectedInvoice.retell_ai_voice_cost_cad || 0))}</td>\n                  </tr>\n                  <tr className=\"border-t-2 border-gray-300 dark:border-gray-600\">\n                    <td className=\"py-2 font-semibold text-gray-900 dark:text-gray-100\">Subtotal</td>\n                    <td className=\"py-2 text-right font-semibold text-gray-900 dark:text-gray-100\">{formatCAD(Number(selectedInvoice.subtotal_cad || 0))}</td>\n                  </tr>\n                  {(selectedInvoice.markup_amount_cad || 0) > 0 && (\n                    <tr>\n                      <td className=\"py-2 text-gray-900 dark:text-gray-100\">Service Markup</td>\n                      <td className=\"py-2 text-right text-gray-900 dark:text-gray-100\">{formatCAD(Number(selectedInvoice.markup_amount_cad || 0))}</td>\n                    </tr>\n                  )}\n                  <tr className=\"border-t-2 border-gray-900 dark:border-gray-100\">\n                    <td className=\"py-2 font-bold text-lg text-gray-900 dark:text-gray-100\">Total</td>\n                    <td className=\"py-2 text-right font-bold text-lg text-gray-900 dark:text-gray-100\">{formatCAD(Number(selectedInvoice.total_amount_cad || 0))}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex justify-end gap-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n              {selectedInvoice.stripe_invoice_url && (\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => selectedInvoice.stripe_invoice_url && window.open(selectedInvoice.stripe_invoice_url, '_blank')}\n                >\n                  <ExternalLink className=\"w-4 h-4 mr-2\" />\n                  View in Stripe\n                </Button>\n              )}\n              {selectedInvoice.invoice_status === 'draft' && (\n                <Button onClick={() => {\n                  setShowDetailModal(false)\n                  sendInvoice(selectedInvoice)\n                }}>\n                  <Send className=\"w-4 h-4 mr-2\" />\n                  Send Invoice\n                </Button>\n              )}\n              {selectedInvoice.invoice_status === 'sent' && (\n                <Button onClick={() => {\n                  setShowDetailModal(false)\n                  markAsPaid(selectedInvoice)\n                }}>\n                  <CheckCircle className=\"w-4 h-4 mr-2\" />\n                  Mark as Paid\n                </Button>\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}