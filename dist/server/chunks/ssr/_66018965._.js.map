{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Card.tsx"],"sourcesContent":["import React from 'react'\n\ninterface CardProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function Card({ children, className = '' }: CardProps) {\n  return (\n    <div className={`bg-gray-100 dark:bg-gray-800 rounded-lg shadow-sm border border-gray-300 dark:border-gray-700 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardHeader({ children, className = '' }: CardHeaderProps) {\n  return (\n    <div className={`px-6 py-4 border-b border-gray-200 dark:border-gray-700 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardTitle({ children, className = '' }: CardTitleProps) {\n  return (\n    <h3 className={`text-lg font-bold gradient-text ${className}`}>\n      {children}\n    </h3>\n  )\n}\n\ninterface CardContentProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardContent({ children, className = '' }: CardContentProps) {\n  return (\n    <div className={`px-6 py-4 ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface CardFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nexport function CardFooter({ children, className = '' }: CardFooterProps) {\n  return (\n    <div className={`px-6 py-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 rounded-b-lg ${className}`}>\n      {children}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAOO,SAAS,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAa;IAC1D,qBACE,8OAAC;QAAI,WAAW,CAAC,8FAA8F,EAAE,WAAW;kBACzH;;;;;;AAGP;AAOO,SAAS,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAmB;IACtE,qBACE,8OAAC;QAAI,WAAW,CAAC,wDAAwD,EAAE,WAAW;kBACnF;;;;;;AAGP;AAOO,SAAS,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAkB;IACpE,qBACE,8OAAC;QAAG,WAAW,CAAC,gCAAgC,EAAE,WAAW;kBAC1D;;;;;;AAGP;AAOO,SAAS,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAoB;IACxE,qBACE,8OAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;kBACrC;;;;;;AAGP;AAOO,SAAS,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAmB;IACtE,qBACE,8OAAC;QAAI,WAAW,CAAC,iGAAiG,EAAE,WAAW;kBAC5H;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Button.tsx"],"sourcesContent":["import React from 'react'\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger' | 'ghost'\n  size?: 'sm' | 'md' | 'lg'\n  loading?: boolean\n  children: React.ReactNode\n}\n\nexport function Button({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  disabled,\n  children,\n  className = '',\n  ...props\n}: ButtonProps) {\n  const baseStyles = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2'\n\n  const variants = {\n    primary: 'bg-blue-600 dark:bg-blue-500 text-white hover:bg-blue-700 dark:hover:bg-blue-600 focus:ring-blue-500 disabled:bg-blue-300 dark:disabled:bg-blue-800',\n    secondary: 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-gray-600 focus:ring-gray-500 disabled:bg-gray-100 dark:disabled:bg-gray-800',\n    danger: 'bg-red-600 dark:bg-red-500 text-white hover:bg-red-700 dark:hover:bg-red-600 focus:ring-red-500 disabled:bg-red-300 dark:disabled:bg-red-800',\n    ghost: 'bg-transparent text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:ring-gray-500'\n  }\n\n  const sizes = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  }\n\n  return (\n    <button\n      className={`${baseStyles} ${variants[variant]} ${sizes[size]} ${className} ${\n        (disabled || loading) ? 'cursor-not-allowed opacity-50' : ''\n      }`}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && (\n        <svg\n          className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      )}\n      {children}\n    </button>\n  )\n}\n"],"names":[],"mappings":";;;;;;AASO,SAAS,OAAO,EACrB,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,QAAQ,EACR,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACS;IACZ,MAAM,aAAa;IAEnB,MAAM,WAAW;QACf,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;IACT;IAEA,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QACC,WAAW,GAAG,WAAW,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,EACzE,AAAC,YAAY,UAAW,kCAAkC,IAC1D;QACF,UAAU,YAAY;QACrB,GAAG,KAAK;;YAER,yBACC,8OAAC;gBACC,WAAU;gBACV,OAAM;gBACN,MAAK;gBACL,SAAQ;;kCAER,8OAAC;wBACC,WAAU;wBACV,IAAG;wBACH,IAAG;wBACH,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,GAAE;;;;;;;;;;;;YAIP;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Input.tsx"],"sourcesContent":["import React from 'react'\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  helpText?: string // Add support for helpText (alias for helperText)\n}\n\nexport function Input({\n  label,\n  error,\n  helperText,\n  helpText,\n  className = '',\n  ...props\n}: InputProps) {\n  // Use either helperText or helpText\n  const helper = helperText || helpText\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <input\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helper && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helper}</p>\n      )}\n    </div>\n  )\n}\n\ninterface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  label?: string\n  error?: string\n  helperText?: string\n}\n\nexport function Textarea({\n  label,\n  error,\n  helperText,\n  className = '',\n  ...props\n}: TextareaProps) {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <textarea\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helperText}</p>\n      )}\n    </div>\n  )\n}\n\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  label?: string\n  error?: string\n  helperText?: string\n  options: Array<{ value: string | number; label: string }>\n}\n\nexport function Select({\n  label,\n  error,\n  helperText,\n  options,\n  className = '',\n  ...props\n}: SelectProps) {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n          {label}\n        </label>\n      )}\n      <select\n        className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 ${\n          error ? 'border-red-500' : 'border-gray-300 dark:border-gray-600'\n        } ${className}`}\n        {...props}\n      >\n        {options.map(option => (\n          <option key={option.value} value={option.value} className=\"bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\">\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{helperText}</p>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;AASO,SAAS,MAAM,EACpB,KAAK,EACL,KAAK,EACL,UAAU,EACV,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACQ;IACX,oCAAoC;IACpC,MAAM,SAAS,cAAc;IAE7B,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBACC,8OAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,8OAAC;gBACC,WAAW,CAAC,oJAAoJ,EAC9J,QAAQ,mBAAmB,uCAC5B,CAAC,EAAE,WAAW;gBACd,GAAG,KAAK;;;;;;YAEV,uBACC,8OAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,UAAU,CAAC,uBACV,8OAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;AAQO,SAAS,SAAS,EACvB,KAAK,EACL,KAAK,EACL,UAAU,EACV,YAAY,EAAE,EACd,GAAG,OACW;IACd,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBACC,8OAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,8OAAC;gBACC,WAAW,CAAC,oJAAoJ,EAC9J,QAAQ,mBAAmB,uCAC5B,CAAC,EAAE,WAAW;gBACd,GAAG,KAAK;;;;;;YAEV,uBACC,8OAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,cAAc,CAAC,uBACd,8OAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE;AASO,SAAS,OAAO,EACrB,KAAK,EACL,KAAK,EACL,UAAU,EACV,OAAO,EACP,YAAY,EAAE,EACd,GAAG,OACS;IACZ,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBACC,8OAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,8OAAC;gBACC,WAAW,CAAC,oJAAoJ,EAC9J,QAAQ,mBAAmB,uCAC5B,CAAC,EAAE,WAAW;gBACd,GAAG,KAAK;0BAER,QAAQ,GAAG,CAAC,CAAA,uBACX,8OAAC;wBAA0B,OAAO,OAAO,KAAK;wBAAE,WAAU;kCACvD,OAAO,KAAK;uBADF,OAAO,KAAK;;;;;;;;;;YAK5B,uBACC,8OAAC;gBAAE,WAAU;0BAA6B;;;;;;YAE3C,cAAc,CAAC,uBACd,8OAAC;gBAAE,WAAU;0BAAiD;;;;;;;;;;;;AAItE","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Modal.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect } from 'react'\nimport { X } from 'lucide-react'\n\ninterface ModalProps {\n  isOpen: boolean\n  onClose: () => void\n  title: string\n  children: React.ReactNode\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n}\n\nexport function Modal({\n  isOpen,\n  onClose,\n  title,\n  children,\n  size = 'md'\n}: ModalProps) {\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') onClose()\n    }\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'hidden'\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'unset'\n    }\n  }, [isOpen, onClose])\n\n  if (!isOpen) return null\n\n  const sizes = {\n    sm: 'max-w-md',\n    md: 'max-w-lg',\n    lg: 'max-w-2xl',\n    xl: 'max-w-4xl'\n  }\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      {/* Backdrop */}\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={onClose}\n      />\n\n      {/* Modal */}\n      <div className=\"flex min-h-full items-center justify-center p-4\">\n        <div\n          className={`relative bg-gray-100 dark:bg-gray-800 rounded-lg shadow-xl ${sizes[size]} w-full`}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {/* Header */}\n          <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-300 dark:border-gray-700\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">{title}</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n\n          {/* Content */}\n          <div className=\"px-6 py-4\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAaO,SAAS,MAAM,EACpB,MAAM,EACN,OAAO,EACP,KAAK,EACL,QAAQ,EACR,OAAO,IAAI,EACA;IACX,IAAA,kNAAS,EAAC;QACR,MAAM,eAAe,CAAC;YACpB,IAAI,EAAE,GAAG,KAAK,UAAU;QAC1B;QAEA,IAAI,QAAQ;YACV,SAAS,gBAAgB,CAAC,WAAW;YACrC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACjC;QAEA,OAAO;YACL,SAAS,mBAAmB,CAAC,WAAW;YACxC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACjC;IACF,GAAG;QAAC;QAAQ;KAAQ;IAEpB,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBACC,WAAU;gBACV,SAAS;;;;;;0BAIX,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAW,CAAC,2DAA2D,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;oBAC7F,SAAS,CAAC,IAAM,EAAE,eAAe;;sCAGjC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA0D;;;;;;8CACxE,8OAAC;oCACC,SAAS;oCACT,WAAU;8CAEV,cAAA,8OAAC,iMAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAKjB,8OAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;;;;;;;;;;;;;AAMb","debugId":null}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Badge.tsx"],"sourcesContent":["import React from 'react'\n\ninterface BadgeProps {\n  children: React.ReactNode\n  color?: 'gray' | 'blue' | 'green' | 'red' | 'yellow'\n  className?: string\n}\n\nexport function Badge({ children, color = 'gray', className = '' }: BadgeProps) {\n  const colors = {\n    gray: 'bg-gray-100 text-gray-800',\n    blue: 'bg-blue-100 text-blue-800',\n    green: 'bg-green-100 text-green-800',\n    red: 'bg-red-100 text-red-800',\n    yellow: 'bg-yellow-100 text-yellow-800'\n  }\n\n  return (\n    <span\n      className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colors[color]} ${className}`}\n    >\n      {children}\n    </span>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAQO,SAAS,MAAM,EAAE,QAAQ,EAAE,QAAQ,MAAM,EAAE,YAAY,EAAE,EAAc;IAC5E,MAAM,SAAS;QACb,MAAM;QACN,MAAM;QACN,OAAO;QACP,KAAK;QACL,QAAQ;IACV;IAEA,qBACE,8OAAC;QACC,WAAW,CAAC,wEAAwE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW;kBAEjH;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/lib/utils/format.ts"],"sourcesContent":["/**\n * Format a number as CAD currency\n */\nexport function formatCAD(amount: number | null | undefined): string {\n  if (amount === null || amount === undefined || isNaN(amount)) return '$0.00'\n  return new Intl.NumberFormat('en-CA', {\n    style: 'currency',\n    currency: 'CAD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount)\n}\n\n/**\n * Format a date\n */\nexport function formatDate(date: string | Date | null | undefined): string {\n  if (!date) return 'N/A'\n  const d = typeof date === 'string' ? new Date(date) : date\n  if (isNaN(d.getTime())) return 'Invalid Date'\n  return new Intl.DateTimeFormat('en-CA', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).format(d)\n}\n\n/**\n * Format a date range\n */\nexport function formatDateRange(range: { start: Date | string; end: Date | string }): string {\n  return `${formatDate(range.start)} - ${formatDate(range.end)}`\n}\n\n/**\n * Format a number with commas\n */\nexport function formatNumber(num: number): string {\n  return new Intl.NumberFormat('en-US').format(num)\n}\n\n/**\n * Get date suffix (1st, 2nd, 3rd, etc.)\n */\nexport function getDaySuffix(day: number): string {\n  if (day >= 11 && day <= 13) return 'th'\n\n  switch (day % 10) {\n    case 1: return 'st'\n    case 2: return 'nd'\n    case 3: return 'rd'\n    default: return 'th'\n  }\n}\n\n/**\n * Get previous month date range\n */\nexport function getPreviousMonthRange(): { start: Date; end: Date } {\n  const now = new Date()\n  const start = new Date(now.getFullYear(), now.getMonth() - 1, 1)\n  const end = new Date(now.getFullYear(), now.getMonth(), 0)\n  return { start, end }\n}\n\n/**\n * Get current month date range\n */\nexport function getCurrentMonthRange(): { start: Date; end: Date } {\n  const now = new Date()\n  const start = new Date(now.getFullYear(), now.getMonth(), 1)\n  const end = new Date()\n  return { start, end }\n}\n\n/**\n * Convert data to CSV format\n */\nexport function convertToCSV(data: Record<string, any>[]): string {\n  if (data.length === 0) return ''\n\n  const headers = Object.keys(data[0])\n  const csvRows = []\n\n  // Add header row\n  csvRows.push(headers.join(','))\n\n  // Add data rows\n  for (const row of data) {\n    const values = headers.map(header => {\n      const value = row[header]\n      // Escape quotes and wrap in quotes if contains comma\n      const escaped = String(value).replace(/\"/g, '\"\"')\n      return escaped.includes(',') ? `\"${escaped}\"` : escaped\n    })\n    csvRows.push(values.join(','))\n  }\n\n  return csvRows.join('\\n')\n}\n\n/**\n * Download a file\n */\nexport function downloadFile(content: string, filename: string, mimeType: string = 'text/plain') {\n  const blob = new Blob([content], { type: mimeType })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n  URL.revokeObjectURL(url)\n}\n\n/**\n * Truncate text with ellipsis\n */\nexport function truncate(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text\n  return text.substring(0, maxLength - 3) + '...'\n}\n\n/**\n * Get initials from name\n */\nexport function getInitials(name: string): string {\n  return name\n    .split(' ')\n    .map(word => word[0])\n    .join('')\n    .toUpperCase()\n    .substring(0, 2)\n}\n\n/**\n * Calculate percentage\n */\nexport function calculatePercentage(value: number, total: number): number {\n  if (total === 0) return 0\n  return (value / total) * 100\n}\n\n/**\n * Calculate trend percentage\n */\nexport function calculateTrend(current: number, previous: number): number {\n  if (previous === 0) return current > 0 ? 100 : 0\n  return ((current - previous) / previous) * 100\n}\n\n/**\n * Format percentage\n */\nexport function formatPercentage(value: number, decimals: number = 1): string {\n  return `${value.toFixed(decimals)}%`\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/app/admin/billing/customers/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { Plus, Edit, Trash2, Search } from 'lucide-react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card'\nimport { Button } from '@/components/ui/Button'\nimport { Input } from '@/components/ui/Input'\nimport { Modal } from '@/components/ui/Modal'\nimport { Badge } from '@/components/ui/Badge'\nimport { supabase } from '@/lib/supabase'\nimport type { BillingCustomer } from '@/lib/types/billing'\nimport { formatDate } from '@/lib/utils/format'\nimport { useNotification } from '@/components/ui/Notification'\n\nexport default function CustomersPage() {\n  const { showNotification, showConfirm } = useNotification()\n  const [customers, setCustomers] = useState<BillingCustomer[]>([])\n  const [filteredCustomers, setFilteredCustomers] = useState<BillingCustomer[]>([])\n  const [loading, setLoading] = useState(true)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [showModal, setShowModal] = useState(false)\n  const [showDetailModal, setShowDetailModal] = useState(false)\n  const [selectedCustomer, setSelectedCustomer] = useState<BillingCustomer | null>(null)\n  const [editingCustomer, setEditingCustomer] = useState<BillingCustomer | null>(null)\n  const [formData, setFormData] = useState({\n    customer_name: '',\n    customer_email: '',\n    retell_agent_ids: [] as string[],\n    voice_agent_id: '',\n    sms_agent_id: '',\n    retell_api_key: '',\n    twilio_phone_numbers: [] as string[],\n    vonage_phone_numbers: [] as string[],\n    billing_contact_name: '',\n    phone_number: '',\n    billing_address: '',\n    tax_id: '',\n    markup_percentage: 0,\n    auto_invoice_enabled: false,\n    notes: ''\n  })\n  const [phoneNumberInput, setPhoneNumberInput] = useState('')\n  const [vonagePhoneNumberInput, setVonagePhoneNumberInput] = useState('')\n\n  useEffect(() => {\n    loadCustomers()\n  }, [])\n\n  const filterCustomers = useCallback(() => {\n    if (!searchQuery) {\n      setFilteredCustomers(customers)\n      return\n    }\n\n    const query = searchQuery.toLowerCase()\n    setFilteredCustomers(\n      customers.filter(c =>\n        c.customer_name.toLowerCase().includes(query) ||\n        c.customer_email.toLowerCase().includes(query)\n      )\n    )\n  }, [searchQuery, customers])\n\n  useEffect(() => {\n    filterCustomers()\n  }, [filterCustomers])\n\n  async function loadCustomers() {\n    setLoading(true)\n    try {\n      const { data, error } = await supabase\n        .from('billing_customers')\n        .select('*')\n        .order('customer_name', { ascending: true })\n\n      if (error) throw error\n      setCustomers(data || [])\n    } catch (error) {\n      console.error('Failed to load customers:', error)\n      setCustomers([])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  function openAddModal() {\n    setEditingCustomer(null)\n    setFormData({\n      customer_name: '',\n      customer_email: '',\n      retell_agent_ids: [],\n      voice_agent_id: '',\n      sms_agent_id: '',\n      retell_api_key: '',\n      twilio_phone_numbers: [],\n      vonage_phone_numbers: [],\n      billing_contact_name: '',\n      phone_number: '',\n      billing_address: '',\n      tax_id: '',\n      markup_percentage: 0,\n      auto_invoice_enabled: false,\n      notes: ''\n    })\n    setPhoneNumberInput('')\n    setVonagePhoneNumberInput('')\n    setShowModal(true)\n  }\n\n  function viewDetails(customer: BillingCustomer) {\n    setSelectedCustomer(customer)\n    setShowDetailModal(true)\n  }\n\n  function openEditModal(customer: BillingCustomer) {\n    setEditingCustomer(customer)\n    setFormData({\n      customer_name: customer.customer_name,\n      customer_email: customer.customer_email,\n      retell_agent_ids: customer.retell_agent_ids || [],\n      voice_agent_id: customer.voice_agent_id || '',\n      sms_agent_id: customer.sms_agent_id || '',\n      retell_api_key: '', // Never pre-fill API key for security\n      twilio_phone_numbers: customer.twilio_phone_numbers || [],\n      vonage_phone_numbers: customer.vonage_phone_numbers || [],\n      billing_contact_name: customer.billing_contact_name || '',\n      phone_number: customer.phone_number || '',\n      billing_address: customer.billing_address || '',\n      tax_id: customer.tax_id || '',\n      markup_percentage: customer.markup_percentage,\n      auto_invoice_enabled: customer.auto_invoice_enabled,\n      notes: customer.notes || ''\n    })\n    setPhoneNumberInput('')\n    setVonagePhoneNumberInput('')\n    setShowModal(true)\n  }\n\n  function addPhoneNumber() {\n    if (!phoneNumberInput.trim()) return\n\n    if (!formData.twilio_phone_numbers.includes(phoneNumberInput.trim())) {\n      setFormData({\n        ...formData,\n        twilio_phone_numbers: [...formData.twilio_phone_numbers, phoneNumberInput.trim()]\n      })\n    }\n    setPhoneNumberInput('')\n  }\n\n  function removePhoneNumber(phoneNumber: string) {\n    setFormData({\n      ...formData,\n      twilio_phone_numbers: formData.twilio_phone_numbers.filter(num => num !== phoneNumber)\n    })\n  }\n\n  function addVonagePhoneNumber() {\n    if (!vonagePhoneNumberInput.trim()) return\n\n    if (!formData.vonage_phone_numbers.includes(vonagePhoneNumberInput.trim())) {\n      setFormData({\n        ...formData,\n        vonage_phone_numbers: [...formData.vonage_phone_numbers, vonagePhoneNumberInput.trim()]\n      })\n    }\n    setVonagePhoneNumberInput('')\n  }\n\n  function removeVonagePhoneNumber(phoneNumber: string) {\n    setFormData({\n      ...formData,\n      vonage_phone_numbers: formData.vonage_phone_numbers.filter(num => num !== phoneNumber)\n    })\n  }\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault()\n\n    try {\n      // Prepare data for save\n      const saveData: any = {\n        customer_name: formData.customer_name,\n        customer_email: formData.customer_email,\n        retell_agent_ids: formData.retell_agent_ids,\n        voice_agent_id: formData.voice_agent_id,\n        sms_agent_id: formData.sms_agent_id,\n        twilio_phone_numbers: formData.twilio_phone_numbers,\n        vonage_phone_numbers: formData.vonage_phone_numbers,\n        billing_contact_name: formData.billing_contact_name,\n        phone_number: formData.phone_number,\n        billing_address: formData.billing_address,\n        tax_id: formData.tax_id,\n        markup_percentage: formData.markup_percentage,\n        auto_invoice_enabled: formData.auto_invoice_enabled,\n        notes: formData.notes\n      }\n\n      // Only include API key if it was entered (not empty)\n      if (formData.retell_api_key.trim()) {\n        // TODO: Encrypt the API key before saving\n        // For now, we'll save it directly (implement encryption in production)\n        saveData.retell_api_key_encrypted = formData.retell_api_key\n      }\n\n      if (editingCustomer) {\n        // Update existing customer\n        const { error } = await supabase\n          .from('billing_customers')\n          .update(saveData)\n          .eq('id', editingCustomer.id)\n\n        if (error) throw error\n        showNotification('Customer updated successfully', 'success')\n      } else {\n        // Create new customer\n        const { error } = await supabase\n          .from('billing_customers')\n          .insert([saveData])\n\n        if (error) throw error\n        showNotification('Customer created successfully', 'success')\n      }\n\n      setShowModal(false)\n      loadCustomers()\n    } catch (error) {\n      console.error('Failed to save customer:', error)\n      showNotification('Failed to save customer', 'error')\n    }\n  }\n\n  async function handleDelete(customer: BillingCustomer) {\n    showConfirm(`Are you sure you want to delete ${customer.customer_name}?`, async () => {\n      try {\n        const { error } = await supabase\n          .from('billing_customers')\n          .delete()\n          .eq('id', customer.id)\n\n        if (error) throw error\n        showNotification('Customer deleted successfully', 'success')\n        loadCustomers()\n      } catch (error) {\n        console.error('Failed to delete customer:', error)\n        showNotification('Failed to delete customer. They may have associated invoices.', 'error')\n      }\n    })\n  }\n\n  if (loading) {\n    return (\n      <div className=\"p-4 md:p-6 lg:p-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 md:h-8 bg-gray-200 dark:bg-gray-700 rounded w-1/2 md:w-1/4 mb-6 md:mb-8\"></div>\n          <div className=\"h-64 md:h-96 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-4 md:p-6 lg:p-8\">\n      <div className=\"mb-6 md:mb-8 flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4\">\n        <div>\n          <h1 className=\"text-2xl md:text-3xl font-black gradient-text\">Customer Management</h1>\n          <p className=\"text-sm md:text-base text-gray-600 dark:text-gray-400 mt-1 md:mt-2\">Manage billing customers and their settings</p>\n        </div>\n        <Button onClick={openAddModal} size=\"sm\" className=\"md:text-base md:px-6 md:py-3\">\n          <Plus className=\"w-4 h-4 mr-2\" />\n          <span className=\"hidden sm:inline\">Add Customer</span>\n          <span className=\"sm:hidden\">Add</span>\n        </Button>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-3 sm:gap-4\">\n            <CardTitle className=\"text-base md:text-lg\">Customers ({filteredCustomers.length})</CardTitle>\n            <div className=\"w-full sm:w-auto flex items-center gap-4\">\n              <div className=\"relative flex-1 sm:flex-none sm:w-64\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search customers...\"\n                  className=\"w-full pl-10 pr-4 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto -mx-4 md:mx-0\">\n            <table className=\"w-full min-w-[900px]\">\n              <thead>\n                <tr className=\"border-b border-gray-200 dark:border-gray-700\">\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Customer Name</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Email</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Stripe Status</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Markup</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Auto-Invoice</th>\n                  <th className=\"text-left py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Created</th>\n                  <th className=\"text-right py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-700 dark:text-gray-300\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredCustomers.length === 0 ? (\n                  <tr>\n                    <td colSpan={7} className=\"text-center py-6 md:py-8 text-gray-500 dark:text-gray-400 text-sm\">\n                      {searchQuery ? 'No customers found matching your search' : 'No customers yet. Add your first customer to get started.'}\n                    </td>\n                  </tr>\n                ) : (\n                  filteredCustomers.map((customer) => (\n                    <tr\n                      key={customer.id}\n                      className=\"border-b border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer\"\n                      onClick={() => viewDetails(customer)}\n                    >\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm font-medium text-gray-900 dark:text-gray-100\">{customer.customer_name}</td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-900 dark:text-gray-100\">{customer.customer_email}</td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm\">\n                        {customer.stripe_customer_id ? (\n                          <Badge color=\"green\">Connected</Badge>\n                        ) : (\n                          <Badge color=\"gray\">Not Connected</Badge>\n                        )}\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-900 dark:text-gray-100\">{customer.markup_percentage || 0}%</td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm\">\n                        {customer.auto_invoice_enabled ? (\n                          <Badge color=\"blue\">Enabled</Badge>\n                        ) : (\n                          <Badge color=\"gray\">Disabled</Badge>\n                        )}\n                      </td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm text-gray-900 dark:text-gray-100\">{formatDate(customer.created_at)}</td>\n                      <td className=\"py-2 md:py-3 px-3 md:px-4 text-xs md:text-sm\" onClick={(e) => e.stopPropagation()}>\n                        <div className=\"flex items-center justify-end gap-2\">\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              openEditModal(customer)\n                            }}\n                            className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-500\"\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleDelete(customer)\n                            }}\n                            className=\"text-red-600 hover:text-red-700\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Customer Detail Modal */}\n      {selectedCustomer && (\n        <Modal\n          isOpen={showDetailModal}\n          onClose={() => setShowDetailModal(false)}\n          title=\"Customer Details\"\n          size=\"xl\"\n        >\n          <div className=\"space-y-6\">\n            {/* Customer Information */}\n            <div>\n              <h3 className=\"text-lg font-black gradient-text mb-3\">Customer Information</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Customer Name</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedCustomer.customer_name}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Email</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedCustomer.customer_email}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Contact Name</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedCustomer.billing_contact_name || 'N/A'}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Phone Number</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedCustomer.phone_number || 'N/A'}</p>\n                </div>\n                <div className=\"col-span-2\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Billing Address</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedCustomer.billing_address || 'N/A'}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Tax ID</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedCustomer.tax_id || 'N/A'}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Billing Settings */}\n            <div>\n              <h3 className=\"text-lg font-black gradient-text mb-3\">Billing Settings</h3>\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Markup Percentage</p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{selectedCustomer.markup_percentage || 0}%</p>\n                </div>\n                <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Auto-Invoice</p>\n                  <div className=\"mt-1\">\n                    {selectedCustomer.auto_invoice_enabled ? (\n                      <Badge color=\"blue\">Enabled</Badge>\n                    ) : (\n                      <Badge color=\"gray\">Disabled</Badge>\n                    )}\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Stripe Status</p>\n                  <div className=\"mt-1\">\n                    {selectedCustomer.stripe_customer_id ? (\n                      <Badge color=\"green\">Connected</Badge>\n                    ) : (\n                      <Badge color=\"gray\">Not Connected</Badge>\n                    )}\n                  </div>\n                </div>\n              </div>\n              {selectedCustomer.stripe_customer_id && (\n                <div className=\"mt-4\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Stripe Customer ID</p>\n                  <p className=\"font-mono text-xs text-gray-900 dark:text-gray-100\">{selectedCustomer.stripe_customer_id}</p>\n                </div>\n              )}\n            </div>\n\n            {/* Retell AI Configuration */}\n            <div>\n              <h3 className=\"text-lg font-black gradient-text mb-3\">Retell AI Configuration</h3>\n              <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Voice Agent ID</p>\n                    {selectedCustomer.voice_agent_id ? (\n                      <Badge color=\"blue\">{selectedCustomer.voice_agent_id}</Badge>\n                    ) : (\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Not configured</p>\n                    )}\n                  </div>\n                  <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">SMS Agent ID</p>\n                    {selectedCustomer.sms_agent_id ? (\n                      <Badge color=\"green\">{selectedCustomer.sms_agent_id}</Badge>\n                    ) : (\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Not configured</p>\n                    )}\n                  </div>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">API Key</p>\n                  <p className=\"text-sm text-gray-900 dark:text-gray-100\">\n                    {selectedCustomer.retell_api_key_encrypted ? '••••••••••••' : 'Not configured'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Twilio Phone Numbers */}\n            <div>\n              <h3 className=\"text-lg font-black gradient-text mb-3\">Twilio Phone Numbers</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Phone Numbers to Track ({selectedCustomer.twilio_phone_numbers?.length || 0})</p>\n                  {selectedCustomer.twilio_phone_numbers && selectedCustomer.twilio_phone_numbers.length > 0 ? (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {selectedCustomer.twilio_phone_numbers.map((phoneNum) => (\n                        <Badge key={phoneNum} color=\"green\">{phoneNum}</Badge>\n                      ))}\n                    </div>\n                  ) : (\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">No phone numbers configured</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Vonage Phone Numbers */}\n            <div>\n              <h3 className=\"text-lg font-black gradient-text mb-3\">Vonage Phone Numbers</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Phone Numbers to Track ({selectedCustomer.vonage_phone_numbers?.length || 0})</p>\n                  {selectedCustomer.vonage_phone_numbers && selectedCustomer.vonage_phone_numbers.length > 0 ? (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {selectedCustomer.vonage_phone_numbers.map((phoneNum) => (\n                        <Badge key={phoneNum} color=\"blue\">{phoneNum}</Badge>\n                      ))}\n                    </div>\n                  ) : (\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">No phone numbers configured</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Notes */}\n            {selectedCustomer.notes && (\n              <div>\n                <h3 className=\"text-lg font-black gradient-text mb-3\">Notes</h3>\n                <p className=\"text-sm text-gray-900 dark:text-gray-100 bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">{selectedCustomer.notes}</p>\n              </div>\n            )}\n\n            {/* Account Details */}\n            <div>\n              <h3 className=\"text-lg font-black gradient-text mb-3\">Account Details</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Created</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{formatDate(selectedCustomer.created_at)}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Last Updated</p>\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{formatDate(selectedCustomer.updated_at)}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex justify-end gap-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n              <Button\n                variant=\"secondary\"\n                onClick={() => setShowDetailModal(false)}\n              >\n                Close\n              </Button>\n              <Button\n                onClick={() => {\n                  setShowDetailModal(false)\n                  openEditModal(selectedCustomer)\n                }}\n              >\n                <Edit className=\"w-4 h-4 mr-2\" />\n                Edit Customer\n              </Button>\n            </div>\n          </div>\n        </Modal>\n      )}\n\n      {/* Add/Edit Modal */}\n      <Modal\n        isOpen={showModal}\n        onClose={() => setShowModal(false)}\n        title={editingCustomer ? 'Edit Customer' : 'Add New Customer'}\n        size=\"lg\"\n      >\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <Input\n              label=\"Customer Name*\"\n              value={formData.customer_name}\n              onChange={(e) => setFormData({ ...formData, customer_name: e.target.value })}\n              required\n            />\n            <Input\n              label=\"Email*\"\n              type=\"email\"\n              value={formData.customer_email}\n              onChange={(e) => setFormData({ ...formData, customer_email: e.target.value })}\n              required\n            />\n          </div>\n\n          {/* Retell API Configuration */}\n          <div>\n            <h3 className=\"text-lg font-black gradient-text mb-3\">Retell AI Configuration</h3>\n            <div className=\"space-y-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n              <Input\n                label=\"Retell AI API Key*\"\n                type=\"password\"\n                value={formData.retell_api_key}\n                onChange={(e) => setFormData({ ...formData, retell_api_key: e.target.value })}\n                placeholder=\"key_...\"\n                required\n                helperText=\"This customer's Retell AI API key (encrypted before storage). Required to fetch their call/chat data.\"\n              />\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Input\n                  label=\"Voice Agent ID*\"\n                  value={formData.voice_agent_id}\n                  onChange={(e) => setFormData({ ...formData, voice_agent_id: e.target.value })}\n                  placeholder=\"agent_voice_...\"\n                  required\n                  helperText=\"Agent ID for voice calls\"\n                />\n\n                <Input\n                  label=\"SMS Agent ID*\"\n                  value={formData.sms_agent_id}\n                  onChange={(e) => setFormData({ ...formData, sms_agent_id: e.target.value })}\n                  placeholder=\"agent_sms_...\"\n                  required\n                  helperText=\"Agent ID for SMS/text messages\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Twilio Phone Numbers */}\n          <div>\n            <h3 className=\"text-lg font-black gradient-text mb-3\">Twilio Phone Numbers</h3>\n            <div className=\"space-y-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Phone Numbers to Track*\n                </label>\n                <div className=\"space-y-2\">\n                  <div className=\"flex gap-2\">\n                    <input\n                      type=\"text\"\n                      className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter phone number (e.g., +15551234567)\"\n                      value={phoneNumberInput}\n                      onChange={(e) => setPhoneNumberInput(e.target.value)}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                          e.preventDefault()\n                          addPhoneNumber()\n                        }\n                      }}\n                    />\n                    <Button type=\"button\" onClick={addPhoneNumber}>Add</Button>\n                  </div>\n                  {formData.twilio_phone_numbers.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                      {formData.twilio_phone_numbers.map((phoneNum) => (\n                        <div\n                          key={phoneNum}\n                          className=\"inline-flex items-center gap-2 px-3 py-1 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 rounded-full text-sm\"\n                        >\n                          <span>{phoneNum}</span>\n                          <button\n                            type=\"button\"\n                            onClick={() => removePhoneNumber(phoneNum)}\n                            className=\"hover:text-green-900 dark:hover:text-green-100\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Add phone numbers to filter Twilio usage for this customer. Use E.164 format (e.g., +15551234567).\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Vonage Phone Numbers */}\n          <div>\n            <h3 className=\"text-lg font-black gradient-text mb-3\">Vonage Phone Numbers</h3>\n            <div className=\"space-y-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Phone Numbers to Track*\n                </label>\n                <div className=\"space-y-2\">\n                  <div className=\"flex gap-2\">\n                    <input\n                      type=\"text\"\n                      className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter phone number (e.g., +15551234567)\"\n                      value={vonagePhoneNumberInput}\n                      onChange={(e) => setVonagePhoneNumberInput(e.target.value)}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                          e.preventDefault()\n                          addVonagePhoneNumber()\n                        }\n                      }}\n                    />\n                    <Button type=\"button\" onClick={addVonagePhoneNumber}>Add</Button>\n                  </div>\n                  {formData.vonage_phone_numbers.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                      {formData.vonage_phone_numbers.map((phoneNum) => (\n                        <div\n                          key={phoneNum}\n                          className=\"inline-flex items-center gap-2 px-3 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded-full text-sm\"\n                        >\n                          <span>{phoneNum}</span>\n                          <button\n                            type=\"button\"\n                            onClick={() => removeVonagePhoneNumber(phoneNum)}\n                            className=\"hover:text-purple-900 dark:hover:text-purple-100\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Add phone numbers to filter Vonage usage for this customer. Use E.164 format (e.g., +15551234567).\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4 border-t border-gray-200 dark:border-gray-700 pt-6\">\n            <Input\n              label=\"Contact Name\"\n              value={formData.billing_contact_name}\n              onChange={(e) => setFormData({ ...formData, billing_contact_name: e.target.value })}\n            />\n            <Input\n              label=\"Phone\"\n              value={formData.phone_number}\n              onChange={(e) => setFormData({ ...formData, phone_number: e.target.value })}\n            />\n          </div>\n\n          <Input\n            label=\"Billing Address\"\n            value={formData.billing_address}\n            onChange={(e) => setFormData({ ...formData, billing_address: e.target.value })}\n          />\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <Input\n              label=\"Tax ID\"\n              value={formData.tax_id}\n              onChange={(e) => setFormData({ ...formData, tax_id: e.target.value })}\n            />\n            <Input\n              label=\"Markup Percentage\"\n              type=\"number\"\n              min=\"0\"\n              max=\"10000\"\n              step=\"0.1\"\n              value={formData.markup_percentage}\n              onChange={(e) => setFormData({ ...formData, markup_percentage: parseFloat(e.target.value) })}\n              helperText=\"e.g., 20 for 20% markup\"\n            />\n          </div>\n\n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"auto_invoice\"\n              className=\"w-4 h-4 text-blue-600 border-gray-300 dark:border-gray-600 rounded focus:ring-blue-500\"\n              checked={formData.auto_invoice_enabled}\n              onChange={(e) => setFormData({ ...formData, auto_invoice_enabled: e.target.checked })}\n            />\n            <label htmlFor=\"auto_invoice\" className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">\n              Enable automatic invoice generation\n            </label>\n          </div>\n\n          <Input\n            label=\"Notes\"\n            value={formData.notes}\n              onChange={(e) => setFormData({ ...formData, notes: e.target.value })}\n            helperText=\"Internal notes about this customer\"\n          />\n\n          <div className=\"flex justify-end gap-4 pt-4\">\n            <Button type=\"button\" variant=\"secondary\" onClick={() => setShowModal(false)}>\n              Cancel\n            </Button>\n            <Button type=\"submit\">\n              {editingCustomer ? 'Update Customer' : 'Create Customer'}\n            </Button>\n          </div>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}