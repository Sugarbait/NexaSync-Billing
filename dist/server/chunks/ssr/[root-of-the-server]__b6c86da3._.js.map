{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,uMAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/NewsTicker.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { Newspaper } from 'lucide-react'\n\ninterface NewsItem {\n  title: string\n  url: string\n  source: string\n  publishedAt: string\n}\n\nexport function NewsTicker() {\n  const [news, setNews] = useState<NewsItem[]>([])\n  const [loading, setLoading] = useState(true)\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date())\n\n  useEffect(() => {\n    fetchNews()\n    // Refresh every 15 minutes\n    const interval = setInterval(() => {\n      console.log('[NewsTicker] Refreshing news (15-minute interval)')\n      fetchNews()\n    }, 15 * 60 * 1000)\n    return () => clearInterval(interval)\n  }, [])\n\n  async function fetchNews() {\n    try {\n      console.log('[NewsTicker] Fetching latest AI news...')\n      // Using NewsAPI - you'll need to add your API key to .env.local as NEXT_PUBLIC_NEWS_API_KEY\n      const apiKey = process.env.NEXT_PUBLIC_NEWS_API_KEY\n\n      if (!apiKey) {\n        console.log('[NewsTicker] No API key found, using fallback news')\n        // Fallback to sample news if no API key\n        setNews([\n          {\n            title: \"OpenAI announces GPT-5 with advanced reasoning capabilities\",\n            url: \"#\",\n            source: \"TechCrunch\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"Google DeepMind releases new AI model for protein folding\",\n            url: \"#\",\n            source: \"The Verge\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"Anthropic's Claude AI reaches 100 million users milestone\",\n            url: \"#\",\n            source: \"VentureBeat\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"Microsoft integrates GPT-4 into Office 365 suite\",\n            url: \"#\",\n            source: \"The Verge\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"Meta AI releases Llama 3 with improved multilingual support\",\n            url: \"#\",\n            source: \"TechCrunch\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"Google Gemini Ultra surpasses GPT-4 in benchmark tests\",\n            url: \"#\",\n            source: \"VentureBeat\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"Researchers achieve breakthrough in AI safety alignment\",\n            url: \"#\",\n            source: \"MIT Technology Review\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"AI-powered drug discovery leads to new cancer treatment\",\n            url: \"#\",\n            source: \"Nature\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"OpenAI launches AI agent framework for enterprise applications\",\n            url: \"#\",\n            source: \"TechCrunch\",\n            publishedAt: new Date().toISOString()\n          },\n          {\n            title: \"Neural networks achieve human-level performance in medical diagnosis\",\n            url: \"#\",\n            source: \"Science Daily\",\n            publishedAt: new Date().toISOString()\n          }\n        ])\n        setLoading(false)\n        setLastUpdate(new Date())\n        return\n      }\n\n      const response = await fetch(\n        `https://newsapi.org/v2/everything?q=artificial+intelligence+OR+AI+OR+machine+learning+OR+ChatGPT+OR+OpenAI+OR+Claude+OR+LLM+OR+GPT+OR+neural+network+OR+deep+learning+OR+Gemini+OR+Anthropic+OR+Google+AI+OR+Microsoft+AI+OR+Meta+AI+OR+AI+model+OR+generative+AI&sortBy=publishedAt&language=en&pageSize=50&apiKey=${apiKey}`\n      )\n\n      const data = await response.json()\n\n      if (data.articles) {\n        const formattedNews = data.articles.map((article: any) => ({\n          title: article.title,\n          url: article.url,\n          source: article.source.name,\n          publishedAt: article.publishedAt\n        }))\n        setNews(formattedNews)\n        console.log(`[NewsTicker] Loaded ${formattedNews.length} articles`)\n      }\n\n      setLoading(false)\n      setLastUpdate(new Date())\n    } catch (error) {\n      console.error('[NewsTicker] Failed to fetch news:', error)\n      setLoading(false)\n    }\n  }\n\n  if (loading || news.length === 0) {\n    return null\n  }\n\n  const formatUpdateTime = (date: Date) => {\n    return date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })\n  }\n\n  return (\n    <div className=\"ticker-gradient text-white overflow-hidden relative rounded-lg\">\n      <div className=\"flex items-center gap-3 py-2 px-4\">\n        <div className=\"flex items-center gap-2 shrink-0\">\n          <Newspaper className=\"w-4 h-4\" />\n          <span className=\"text-sm font-semibold\">AI NEWS</span>\n          <span className=\"text-xs text-white/60\">({formatUpdateTime(lastUpdate)})</span>\n          <div className=\"w-px h-4 bg-white/30\"></div>\n        </div>\n\n        <div className=\"flex-1 overflow-hidden relative\">\n          <div className=\"ticker-wrapper\">\n            <div className=\"ticker-content\">\n              {/* Duplicate the news items to create seamless loop */}\n              {[...news, ...news].map((item, index) => (\n                <div\n                  key={index}\n                  className=\"inline-flex items-center gap-2 mx-6\"\n                >\n                  <span className=\"text-sm whitespace-nowrap\">{item.title}</span>\n                  <span className=\"text-xs text-white/60 whitespace-nowrap\">({item.source})</span>\n                  <span className=\"text-white/40\">•</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .ticker-gradient {\n          background: linear-gradient(90deg, #2563eb 0%, #7c3aed 25%, #2563eb 50%, #7c3aed 75%, #2563eb 100%);\n          background-size: 400% 100%;\n          animation: gradient-shift 15s linear infinite;\n        }\n\n        @keyframes gradient-shift {\n          0% {\n            background-position: 0% 50%;\n          }\n          100% {\n            background-position: 100% 50%;\n          }\n        }\n\n        .ticker-wrapper {\n          display: flex;\n          overflow: hidden;\n        }\n\n        .ticker-content {\n          display: flex;\n          animation: scroll 60s linear infinite;\n        }\n\n        @keyframes scroll {\n          0% {\n            transform: translateX(0);\n          }\n          100% {\n            transform: translateX(-50%);\n          }\n        }\n\n        .ticker-content:hover {\n          animation-play-state: paused;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAHA;;;;;AAYO,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAa,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAO,IAAI;IAEvD,IAAA,kNAAS,EAAC;QACR;QACA,2BAA2B;QAC3B,MAAM,WAAW,YAAY;YAC3B,QAAQ,GAAG,CAAC;YACZ;QACF,GAAG,KAAK,KAAK;QACb,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,eAAe;QACb,IAAI;YACF,QAAQ,GAAG,CAAC;YACZ,4FAA4F;YAC5F,MAAM;YAEN,wCAAa;gBACX,QAAQ,GAAG,CAAC;gBACZ,wCAAwC;gBACxC,QAAQ;oBACN;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACE,OAAO;wBACP,KAAK;wBACL,QAAQ;wBACR,aAAa,IAAI,OAAO,WAAW;oBACrC;iBACD;gBACD,WAAW;gBACX,cAAc,IAAI;gBAClB;YACF;;;YAEA,MAAM;YAIN,MAAM;QAeR,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YACpD,WAAW;QACb;IACF;IAEA,IAAI,WAAW,KAAK,MAAM,KAAK,GAAG;QAChC,OAAO;IACT;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO,KAAK,kBAAkB,CAAC,SAAS;YAAE,MAAM;YAAW,QAAQ;QAAU;IAC/E;IAEA,qBACE,8OAAC;kDAAc;;0BACb,8OAAC;0DAAc;;kCACb,8OAAC;kEAAc;;0CACb,8OAAC,yNAAS;gCAAC,WAAU;;;;;;0CACrB,8OAAC;0EAAe;0CAAwB;;;;;;0CACxC,8OAAC;0EAAe;;oCAAwB;oCAAE,iBAAiB;oCAAY;;;;;;;0CACvE,8OAAC;0EAAc;;;;;;;;;;;;kCAGjB,8OAAC;kEAAc;kCACb,cAAA,8OAAC;sEAAc;sCACb,cAAA,8OAAC;0EAAc;0CAEZ;uCAAI;uCAAS;iCAAK,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC7B,8OAAC;kFAEW;;0DAEV,8OAAC;0FAAe;0DAA6B,KAAK,KAAK;;;;;;0DACvD,8OAAC;0FAAe;;oDAA0C;oDAAE,KAAK,MAAM;oDAAC;;;;;;;0DACxE,8OAAC;0FAAe;0DAAgB;;;;;;;uCAL3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDvB","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/ui/Notification.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useState, useCallback } from 'react'\nimport { CheckCircle, XCircle, AlertCircle, X } from 'lucide-react'\n\ninterface NotificationContextType {\n  showNotification: (message: string, type?: 'success' | 'error' | 'warning' | 'info') => void\n  showConfirm: (message: string, onConfirm: () => void) => void\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined)\n\nexport function useNotification() {\n  const context = useContext(NotificationContext)\n  if (!context) {\n    throw new Error('useNotification must be used within NotificationProvider')\n  }\n  return context\n}\n\ninterface Notification {\n  id: number\n  message: string\n  type: 'success' | 'error' | 'warning' | 'info'\n}\n\ninterface ConfirmDialog {\n  message: string\n  onConfirm: () => void\n}\n\nexport function NotificationProvider({ children }: { children: React.ReactNode }) {\n  const [notifications, setNotifications] = useState<Notification[]>([])\n  const [confirmDialog, setConfirmDialog] = useState<ConfirmDialog | null>(null)\n\n  const showNotification = useCallback((message: string, type: 'success' | 'error' | 'warning' | 'info' = 'info') => {\n    const id = Date.now()\n    setNotifications(prev => [...prev, { id, message, type }])\n\n    // Auto-dismiss after 5 seconds\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== id))\n    }, 5000)\n  }, [])\n\n  const showConfirm = useCallback((message: string, onConfirm: () => void) => {\n    setConfirmDialog({ message, onConfirm })\n  }, [])\n\n  const handleConfirm = () => {\n    if (confirmDialog) {\n      confirmDialog.onConfirm()\n      setConfirmDialog(null)\n    }\n  }\n\n  const handleCancel = () => {\n    setConfirmDialog(null)\n  }\n\n  const removeNotification = (id: number) => {\n    setNotifications(prev => prev.filter(n => n.id !== id))\n  }\n\n  return (\n    <NotificationContext.Provider value={{ showNotification, showConfirm }}>\n      {children}\n\n      {/* Notifications */}\n      <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n        {notifications.map(notification => (\n          <div\n            key={notification.id}\n            className={`\n              min-w-[300px] max-w-md p-4 rounded-lg shadow-lg border\n              flex items-start gap-3\n              animate-in slide-in-from-right duration-300\n              ${notification.type === 'success' ? 'bg-green-50 dark:bg-green-900/60 border-green-200 dark:border-green-700' : ''}\n              ${notification.type === 'error' ? 'bg-red-50 dark:bg-red-900/60 border-red-200 dark:border-red-700' : ''}\n              ${notification.type === 'warning' ? 'bg-yellow-50 dark:bg-yellow-900/60 border-yellow-200 dark:border-yellow-700' : ''}\n              ${notification.type === 'info' ? 'bg-blue-50 dark:bg-blue-900/60 border-blue-200 dark:border-blue-700' : ''}\n            `}\n          >\n            {notification.type === 'success' && <CheckCircle className=\"w-5 h-5 text-green-600 dark:text-green-400 flex-shrink-0 mt-0.5\" />}\n            {notification.type === 'error' && <XCircle className=\"w-5 h-5 text-red-600 dark:text-red-400 flex-shrink-0 mt-0.5\" />}\n            {notification.type === 'warning' && <AlertCircle className=\"w-5 h-5 text-yellow-600 dark:text-yellow-400 flex-shrink-0 mt-0.5\" />}\n            {notification.type === 'info' && <AlertCircle className=\"w-5 h-5 text-blue-600 dark:text-blue-400 flex-shrink-0 mt-0.5\" />}\n\n            <p className={`\n              flex-1 text-sm\n              ${notification.type === 'success' ? 'text-green-800 dark:text-green-200' : ''}\n              ${notification.type === 'error' ? 'text-red-800 dark:text-red-200' : ''}\n              ${notification.type === 'warning' ? 'text-yellow-800 dark:text-yellow-200' : ''}\n              ${notification.type === 'info' ? 'text-blue-800 dark:text-blue-200' : ''}\n            `}>\n              {notification.message}\n            </p>\n\n            <button\n              onClick={() => removeNotification(notification.id)}\n              className={`\n                flex-shrink-0 rounded p-1 transition-colors\n                ${notification.type === 'success' ? 'hover:bg-green-200 dark:hover:bg-green-800 text-green-600 dark:text-green-400' : ''}\n                ${notification.type === 'error' ? 'hover:bg-red-200 dark:hover:bg-red-800 text-red-600 dark:text-red-400' : ''}\n                ${notification.type === 'warning' ? 'hover:bg-yellow-200 dark:hover:bg-yellow-800 text-yellow-600 dark:text-yellow-400' : ''}\n                ${notification.type === 'info' ? 'hover:bg-blue-200 dark:hover:bg-blue-800 text-blue-600 dark:text-blue-400' : ''}\n              `}\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {/* Confirm Dialog */}\n      {confirmDialog && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-6 animate-in zoom-in-95 duration-200\">\n            <div className=\"flex items-start gap-4\">\n              <AlertCircle className=\"w-6 h-6 text-yellow-600 dark:text-yellow-400 flex-shrink-0 mt-0.5\" />\n              <div className=\"flex-1\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">Confirm Action</h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">{confirmDialog.message}</p>\n              </div>\n            </div>\n\n            <div className=\"flex gap-3 mt-6\">\n              <button\n                onClick={handleCancel}\n                className=\"flex-1 px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleConfirm}\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Confirm\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </NotificationContext.Provider>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/lib/services/cloudSyncService.ts"],"sourcesContent":["/**\n * Cloud Sync Service for Billing Admin\n * Provides cross-device synchronization for user preferences and settings\n * Implements real-time sync using Supabase\n */\n\nimport { supabase } from '@/lib/supabase'\n\ninterface UserPreferences {\n  theme?: 'light' | 'dark' | 'system'\n  selectedCustomerId?: string\n  dateRange?: {\n    start: string\n    end: string\n  }\n  dashboardRefreshInterval?: number\n  tablePageSize?: number\n  notifications?: {\n    invoiceGenerated?: boolean\n    paymentReceived?: boolean\n    customerAdded?: boolean\n  }\n  lastViewedPage?: string\n  favoriteCustomers?: string[]\n}\n\ninterface SyncData {\n  user_id: string\n  device_id: string\n  preferences: UserPreferences\n  last_updated: string\n  version: number\n}\n\nclass CloudSyncService {\n  private userId: string | null = null\n  private deviceId: string\n  private syncEnabled: boolean = true\n  private autoSyncInterval: number = 30000 // 30 seconds\n  private autoSyncIntervalId: number | null = null\n  private realtimeChannel: any = null\n\n  constructor() {\n    this.deviceId = this.getOrCreateDeviceId()\n    this.initializeSync()\n  }\n\n  /**\n   * Initialize sync service\n   */\n  private initializeSync() {\n    console.log('CloudSyncService initialized:', {\n      deviceId: this.deviceId,\n      syncEnabled: this.syncEnabled\n    })\n  }\n\n  /**\n   * Get or create a unique device ID\n   */\n  private getOrCreateDeviceId(): string {\n    // Check if we're in a browser environment\n    if (typeof window === 'undefined') {\n      return 'server_device_temp'\n    }\n\n    let deviceId = localStorage.getItem('billing_device_id')\n    if (!deviceId) {\n      if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n        deviceId = `device_${crypto.randomUUID()}`\n      } else {\n        deviceId = `device_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`\n      }\n      localStorage.setItem('billing_device_id', deviceId)\n    }\n    return deviceId\n  }\n\n  /**\n   * Set user ID and start sync\n   */\n  public setUserId(userId: string) {\n    this.userId = userId\n    console.log('CloudSyncService: User ID set to', userId)\n\n    // Check if table exists before starting sync\n    this.checkAndInitializeSync()\n  }\n\n  /**\n   * Check if user_preferences table exists and initialize sync\n   */\n  private async checkAndInitializeSync() {\n    try {\n      // Try a simple query to check if table exists\n      const { error } = await supabase\n        .from('user_preferences')\n        .select('user_id')\n        .limit(1)\n\n      if (error && error.code === '42P01') {\n        console.info('CloudSyncService: Cloud sync disabled - table not found. Run migration to enable.')\n        console.info('See CLOUD_SYNC_SETUP.md for setup instructions.')\n        return\n      }\n\n      // Table exists, start sync\n      await this.syncFromCloud()\n\n      if (this.syncEnabled) {\n        this.startAutoSync()\n        this.setupRealtimeSync()\n      }\n    } catch (error) {\n      console.info('CloudSyncService: Using local storage only')\n    }\n  }\n\n  /**\n   * Sync preferences to cloud\n   */\n  public async syncToCloud(preferences: UserPreferences): Promise<{ success: boolean; message?: string }> {\n    if (!this.userId) {\n      return { success: false, message: 'User not authenticated' }\n    }\n\n    try {\n      const syncData: SyncData = {\n        user_id: this.userId,\n        device_id: this.deviceId,\n        preferences,\n        last_updated: new Date().toISOString(),\n        version: 1\n      }\n\n      // Upsert to Supabase\n      const { error } = await supabase\n        .from('user_preferences')\n        .upsert(syncData, {\n          onConflict: 'user_id'\n        })\n\n      if (error) {\n        // 42P01 = table does not exist (migration not run)\n        if (error.code === '42P01') {\n          console.warn('CloudSyncService: user_preferences table does not exist. Run the migration in Supabase.')\n          // Save to localStorage only (browser only)\n          if (typeof window !== 'undefined') {\n            localStorage.setItem(`preferences_${this.userId}`, JSON.stringify(preferences))\n          }\n          return { success: true, message: 'Saved locally - table not found' }\n        }\n\n        console.warn('CloudSyncService: Sync to cloud error (code: ' + error.code + '):', error.message)\n        // Save to localStorage as fallback (browser only)\n        if (typeof window !== 'undefined') {\n          localStorage.setItem(`preferences_${this.userId}`, JSON.stringify(preferences))\n        }\n        return { success: false, message: error.message }\n      }\n\n      // Save to localStorage as cache (browser only)\n      if (typeof window !== 'undefined') {\n        localStorage.setItem(`preferences_${this.userId}`, JSON.stringify(preferences))\n        localStorage.setItem(`lastSync_${this.userId}`, new Date().toISOString())\n      }\n\n      console.log('CloudSyncService: Preferences synced to cloud')\n      return { success: true, message: 'Preferences synced successfully' }\n    } catch (error) {\n      console.warn('CloudSyncService: Sync to cloud error:', error)\n      // Save to localStorage as fallback (browser only)\n      if (typeof window !== 'undefined') {\n        localStorage.setItem(`preferences_${this.userId}`, JSON.stringify(preferences))\n      }\n      return { success: false, message: error instanceof Error ? error.message : 'Unknown error' }\n    }\n  }\n\n  /**\n   * Sync preferences from cloud\n   */\n  public async syncFromCloud(): Promise<{ success: boolean; preferences?: UserPreferences; message?: string }> {\n    if (!this.userId) {\n      return { success: false, message: 'User not authenticated' }\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', this.userId)\n        .maybeSingle()\n\n      // Handle specific error codes\n      if (error) {\n        console.error('CloudSyncService: Detailed error:', {\n          code: error.code,\n          message: error.message,\n          details: error.details,\n          hint: error.hint,\n          userId: this.userId\n        })\n\n        // 42P01 = table does not exist (migration not run)\n        if (error.code === '42P01') {\n          console.warn('CloudSyncService: user_preferences table does not exist. Run the migration in Supabase.')\n          // Return success with empty preferences to not break the app\n          return { success: true, preferences: {}, message: 'Table not found - migration required' }\n        }\n\n        // Log other errors but don't break the app\n        console.warn('CloudSyncService: Sync error (code: ' + error.code + '):', error.message)\n        return { success: false, message: error.message }\n      }\n\n      // No data found (first time sync)\n      if (!data) {\n        console.log('CloudSyncService: No preferences found in cloud')\n        return { success: true, preferences: {}, message: 'No preferences found' }\n      }\n\n      if (data) {\n        const preferences = data.preferences as UserPreferences\n\n        // Save to localStorage as cache (browser only)\n        if (typeof window !== 'undefined') {\n          localStorage.setItem(`preferences_${this.userId}`, JSON.stringify(preferences))\n          localStorage.setItem(`lastSync_${this.userId}`, new Date().toISOString())\n        }\n\n        console.log('CloudSyncService: Preferences synced from cloud')\n        return { success: true, preferences, message: 'Preferences loaded successfully' }\n      }\n\n      // No preferences found, return empty\n      return { success: true, preferences: {}, message: 'No preferences found' }\n    } catch (error) {\n      console.warn('CloudSyncService: Sync from cloud error:', error)\n      // Return success with empty preferences to not break the app\n      return { success: true, preferences: {}, message: 'Sync failed - using local cache' }\n    }\n  }\n\n  /**\n   * Setup real-time sync using Supabase subscriptions\n   */\n  private setupRealtimeSync() {\n    if (!this.userId || this.realtimeChannel) return\n\n    // Subscribe to changes in user_preferences table\n    this.realtimeChannel = supabase\n      .channel(`user_preferences:${this.userId}`)\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'user_preferences',\n          filter: `user_id=eq.${this.userId}`\n        },\n        (payload) => {\n          console.log('CloudSyncService: Real-time update received', payload)\n\n          // Check if update is from another device\n          if (payload.new && typeof payload.new === 'object' && 'device_id' in payload.new) {\n            const syncData = payload.new as SyncData\n            if (syncData.device_id !== this.deviceId) {\n              const preferences = syncData.preferences as UserPreferences\n\n              // Update localStorage cache (browser only)\n              if (typeof window !== 'undefined') {\n                localStorage.setItem(`preferences_${this.userId}`, JSON.stringify(preferences))\n\n                // Dispatch event to notify components\n                window.dispatchEvent(new CustomEvent('cloudPreferencesUpdated', {\n                  detail: preferences\n                }))\n              }\n            }\n          }\n        }\n      )\n      .subscribe()\n\n    console.log('CloudSyncService: Real-time sync enabled')\n  }\n\n  /**\n   * Start automatic background sync\n   */\n  public startAutoSync() {\n    if (!this.syncEnabled || !this.userId) return\n\n    // Clear existing interval\n    this.stopAutoSync()\n\n    this.autoSyncIntervalId = window.setInterval(async () => {\n      if (this.userId && this.syncEnabled) {\n        try {\n          console.log('CloudSyncService: Auto-sync check')\n          const result = await this.syncFromCloud()\n\n          if (result.success && result.preferences) {\n            // Dispatch event to notify components\n            window.dispatchEvent(new CustomEvent('cloudPreferencesUpdated', {\n              detail: result.preferences\n            }))\n          }\n        } catch (error) {\n          console.error('Auto-sync error:', error)\n        }\n      }\n    }, this.autoSyncInterval)\n\n    console.log('CloudSyncService: Auto-sync started')\n  }\n\n  /**\n   * Stop automatic sync\n   */\n  public stopAutoSync() {\n    if (this.autoSyncIntervalId !== null) {\n      window.clearInterval(this.autoSyncIntervalId)\n      this.autoSyncIntervalId = null\n      console.log('CloudSyncService: Auto-sync stopped')\n    }\n\n    // Unsubscribe from real-time channel\n    if (this.realtimeChannel) {\n      this.realtimeChannel.unsubscribe()\n      this.realtimeChannel = null\n      console.log('CloudSyncService: Real-time sync stopped')\n    }\n  }\n\n  /**\n   * Force sync now\n   */\n  public async forceSyncNow(): Promise<{ success: boolean; message: string }> {\n    if (!this.userId) {\n      return { success: false, message: 'User not authenticated' }\n    }\n\n    // Check if we're in a browser environment\n    if (typeof window === 'undefined') {\n      return { success: false, message: 'Not in browser environment' }\n    }\n\n    try {\n      // Get current local preferences or use empty object\n      const localPrefs = localStorage.getItem(`preferences_${this.userId}`)\n      const preferences: UserPreferences = localPrefs ? JSON.parse(localPrefs) : {}\n\n      const result = await this.syncToCloud(preferences)\n\n      if (result.success) {\n        return { success: true, message: 'Preferences synced to cloud' }\n      } else {\n        return { success: false, message: result.message || 'Sync failed' }\n      }\n    } catch (error) {\n      return { success: false, message: error instanceof Error ? error.message : 'Unknown error' }\n    }\n  }\n\n  /**\n   * Get sync status\n   */\n  public getSyncStatus(): { enabled: boolean; lastSync?: string; deviceId: string } {\n    // Check if we're in a browser environment\n    const lastSync = typeof window !== 'undefined'\n      ? localStorage.getItem(`lastSync_${this.userId}`)\n      : null\n\n    return {\n      enabled: this.syncEnabled,\n      lastSync: lastSync || undefined,\n      deviceId: this.deviceId\n    }\n  }\n\n  /**\n   * Get cached preferences\n   */\n  public getCachedPreferences(): UserPreferences | null {\n    if (!this.userId) return null\n\n    // Check if we're in a browser environment\n    if (typeof window === 'undefined') {\n      return null\n    }\n\n    const cached = localStorage.getItem(`preferences_${this.userId}`)\n    if (cached) {\n      try {\n        return JSON.parse(cached) as UserPreferences\n      } catch (error) {\n        console.error('Failed to parse cached preferences:', error)\n        return null\n      }\n    }\n    return null\n  }\n\n  /**\n   * Cleanup on logout\n   */\n  public cleanup() {\n    this.stopAutoSync()\n    this.userId = null\n    console.log('CloudSyncService: Cleaned up')\n  }\n}\n\n// Export singleton instance\nexport const cloudSyncService = new CloudSyncService()\nexport type { UserPreferences }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/components/providers/CloudSyncProvider.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useEffect, useState, useCallback } from 'react'\nimport { cloudSyncService, UserPreferences } from '@/lib/services/cloudSyncService'\n\ninterface CloudSyncContextType {\n  preferences: UserPreferences | null\n  syncStatus: { enabled: boolean; lastSync?: string; deviceId: string }\n  isSyncing: boolean\n  updatePreferences: (prefs: Partial<UserPreferences>) => Promise<void>\n  forceSync: () => Promise<void>\n}\n\nconst CloudSyncContext = createContext<CloudSyncContextType | undefined>(undefined)\n\nexport function CloudSyncProvider({ children, userId }: { children: React.ReactNode; userId?: string }) {\n  const [preferences, setPreferences] = useState<UserPreferences | null>(null)\n  const [syncStatus, setSyncStatus] = useState(cloudSyncService.getSyncStatus())\n  const [isSyncing, setIsSyncing] = useState(false)\n\n  // Initialize sync service when user ID is available\n  useEffect(() => {\n    if (userId) {\n      cloudSyncService.setUserId(userId)\n\n      // Load cached preferences immediately\n      const cached = cloudSyncService.getCachedPreferences()\n      if (cached) {\n        setPreferences(cached)\n      }\n\n      // Sync from cloud\n      syncFromCloud()\n\n      // Update sync status\n      setSyncStatus(cloudSyncService.getSyncStatus())\n    }\n\n    return () => {\n      if (!userId) {\n        cloudSyncService.cleanup()\n      }\n    }\n  }, [userId])\n\n  // Listen for cloud preferences updates (from other devices)\n  useEffect(() => {\n    const handleCloudUpdate = (event: CustomEvent) => {\n      console.log('CloudSyncProvider: Preferences updated from cloud', event.detail)\n      setPreferences(event.detail as UserPreferences)\n      setSyncStatus(cloudSyncService.getSyncStatus())\n    }\n\n    window.addEventListener('cloudPreferencesUpdated', handleCloudUpdate as EventListener)\n\n    return () => {\n      window.removeEventListener('cloudPreferencesUpdated', handleCloudUpdate as EventListener)\n    }\n  }, [])\n\n  const syncFromCloud = useCallback(async () => {\n    if (!userId) return\n\n    setIsSyncing(true)\n    try {\n      const result = await cloudSyncService.syncFromCloud()\n      if (result.success && result.preferences) {\n        setPreferences(result.preferences)\n        setSyncStatus(cloudSyncService.getSyncStatus())\n      }\n    } catch (error) {\n      // Silently handle errors - the service already logs them\n      console.debug('CloudSyncProvider: Sync completed with fallback')\n    } finally {\n      setIsSyncing(false)\n    }\n  }, [userId])\n\n  const updatePreferences = useCallback(async (newPrefs: Partial<UserPreferences>) => {\n    if (!userId) return\n\n    const updated = { ...preferences, ...newPrefs }\n    setPreferences(updated)\n\n    // Sync to cloud in background\n    setIsSyncing(true)\n    try {\n      await cloudSyncService.syncToCloud(updated)\n      setSyncStatus(cloudSyncService.getSyncStatus())\n    } catch (error) {\n      // Silently handle errors - the service already logs them\n      console.debug('CloudSyncProvider: Update completed with fallback')\n    } finally {\n      setIsSyncing(false)\n    }\n  }, [preferences, userId])\n\n  const forceSync = useCallback(async () => {\n    if (!userId) return\n\n    setIsSyncing(true)\n    try {\n      await cloudSyncService.forceSyncNow()\n      await syncFromCloud()\n    } catch (error) {\n      // Silently handle errors - the service already logs them\n      console.debug('CloudSyncProvider: Force sync completed with fallback')\n    } finally {\n      setIsSyncing(false)\n    }\n  }, [userId, syncFromCloud])\n\n  const value: CloudSyncContextType = {\n    preferences,\n    syncStatus,\n    isSyncing,\n    updatePreferences,\n    forceSync\n  }\n\n  return (\n    <CloudSyncContext.Provider value={value}>\n      {children}\n    </CloudSyncContext.Provider>\n  )\n}\n\nexport function useCloudSync() {\n  const context = useContext(CloudSyncContext)\n  if (context === undefined) {\n    throw new Error('useCloudSync must be used within a CloudSyncProvider')\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAHA;;;;AAaA,MAAM,iCAAmB,IAAA,sNAAa,EAAmC;AAElE,SAAS,kBAAkB,EAAE,QAAQ,EAAE,MAAM,EAAkD;IACpG,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAyB;IACvE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC,uJAAgB,CAAC,aAAa;IAC3E,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAE3C,oDAAoD;IACpD,IAAA,kNAAS,EAAC;QACR,IAAI,QAAQ;YACV,uJAAgB,CAAC,SAAS,CAAC;YAE3B,sCAAsC;YACtC,MAAM,SAAS,uJAAgB,CAAC,oBAAoB;YACpD,IAAI,QAAQ;gBACV,eAAe;YACjB;YAEA,kBAAkB;YAClB;YAEA,qBAAqB;YACrB,cAAc,uJAAgB,CAAC,aAAa;QAC9C;QAEA,OAAO;YACL,IAAI,CAAC,QAAQ;gBACX,uJAAgB,CAAC,OAAO;YAC1B;QACF;IACF,GAAG;QAAC;KAAO;IAEX,4DAA4D;IAC5D,IAAA,kNAAS,EAAC;QACR,MAAM,oBAAoB,CAAC;YACzB,QAAQ,GAAG,CAAC,qDAAqD,MAAM,MAAM;YAC7E,eAAe,MAAM,MAAM;YAC3B,cAAc,uJAAgB,CAAC,aAAa;QAC9C;QAEA,OAAO,gBAAgB,CAAC,2BAA2B;QAEnD,OAAO;YACL,OAAO,mBAAmB,CAAC,2BAA2B;QACxD;IACF,GAAG,EAAE;IAEL,MAAM,gBAAgB,IAAA,oNAAW,EAAC;QAChC,IAAI,CAAC,QAAQ;QAEb,aAAa;QACb,IAAI;YACF,MAAM,SAAS,MAAM,uJAAgB,CAAC,aAAa;YACnD,IAAI,OAAO,OAAO,IAAI,OAAO,WAAW,EAAE;gBACxC,eAAe,OAAO,WAAW;gBACjC,cAAc,uJAAgB,CAAC,aAAa;YAC9C;QACF,EAAE,OAAO,OAAO;YACd,yDAAyD;YACzD,QAAQ,KAAK,CAAC;QAChB,SAAU;YACR,aAAa;QACf;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,oBAAoB,IAAA,oNAAW,EAAC,OAAO;QAC3C,IAAI,CAAC,QAAQ;QAEb,MAAM,UAAU;YAAE,GAAG,WAAW;YAAE,GAAG,QAAQ;QAAC;QAC9C,eAAe;QAEf,8BAA8B;QAC9B,aAAa;QACb,IAAI;YACF,MAAM,uJAAgB,CAAC,WAAW,CAAC;YACnC,cAAc,uJAAgB,CAAC,aAAa;QAC9C,EAAE,OAAO,OAAO;YACd,yDAAyD;YACzD,QAAQ,KAAK,CAAC;QAChB,SAAU;YACR,aAAa;QACf;IACF,GAAG;QAAC;QAAa;KAAO;IAExB,MAAM,YAAY,IAAA,oNAAW,EAAC;QAC5B,IAAI,CAAC,QAAQ;QAEb,aAAa;QACb,IAAI;YACF,MAAM,uJAAgB,CAAC,YAAY;YACnC,MAAM;QACR,EAAE,OAAO,OAAO;YACd,yDAAyD;YACzD,QAAQ,KAAK,CAAC;QAChB,SAAU;YACR,aAAa;QACf;IACF,GAAG;QAAC;QAAQ;KAAc;IAE1B,MAAM,QAA8B;QAClC;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;kBAC/B;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":["file:///I:/Apps%20Back%20Up/nexasync-billing/app/admin/billing/layout.tsx"],"sourcesContent":["/**\n * ⚠️ SECURITY CRITICAL FILE - DO NOT MODIFY WITHOUT AUTHORIZATION ⚠️\n *\n * This file enforces authentication and MFA verification for all billing routes.\n * Any unauthorized changes could compromise system security.\n *\n * Protected Features:\n * - Route-level MFA verification (lines 64-74)\n * - Session clearing on logout (lines 86-89)\n * - User isolation enforcement\n *\n * Contact: elitesquadp@protonmail.com for authorization\n */\n\n'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport Link from 'next/link'\nimport Image from 'next/image'\nimport { usePathname, useRouter } from 'next/navigation'\nimport { Users, FileText, Settings, Shield, LayoutDashboard, UserCircle, LogOut, ChevronDown, Menu, X } from 'lucide-react'\nimport { supabase } from '@/lib/supabase'\nimport type { BillingUser } from '@/lib/types/auth'\nimport { NewsTicker } from '@/components/ui/NewsTicker'\nimport { NotificationProvider } from '@/components/ui/Notification'\nimport { CloudSyncProvider } from '@/components/providers/CloudSyncProvider'\n\nexport default function BillingLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const pathname = usePathname()\n  const router = useRouter()\n  const [currentUser, setCurrentUser] = useState<BillingUser | null>(null)\n  const [showProfileMenu, setShowProfileMenu] = useState(false)\n  const [showMobileMenu, setShowMobileMenu] = useState(false)\n\n  useEffect(() => {\n    loadCurrentUser()\n  }, [])\n\n  async function loadCurrentUser() {\n    try {\n      const { data: { user } } = await supabase.auth.getUser()\n      if (!user) {\n        router.push('/login')\n        return\n      }\n\n      const { data: billingUser } = await supabase\n        .from('billing_users')\n        .select('*')\n        .eq('auth_user_id', user.id)\n        .single()\n\n      if (billingUser) {\n        setCurrentUser(billingUser)\n\n        // MFA verification check\n        if (billingUser.mfa_enabled) {\n          const mfaVerified = sessionStorage.getItem('mfa_verified')\n          if (mfaVerified !== 'true') {\n            // MFA is required but not verified in this session\n            await supabase.auth.signOut()\n            sessionStorage.clear()\n            router.push('/login')\n            return\n          }\n        }\n      } else {\n        router.push('/login')\n      }\n    } catch (error) {\n      console.error('Failed to load user:', error)\n      router.push('/login')\n    }\n  }\n\n  async function handleLogout() {\n    try {\n      await supabase.auth.signOut()\n      sessionStorage.clear()\n      router.push('/login')\n    } catch (error) {\n      console.error('Logout error:', error)\n    }\n  }\n\n  const navItems = [\n    { href: '/admin/billing', label: 'Dashboard', icon: LayoutDashboard },\n    { href: '/admin/billing/customers', label: 'Customers', icon: Users },\n    { href: '/admin/billing/invoices', label: 'Invoices', icon: FileText },\n    { href: '/admin/billing/settings', label: 'Settings', icon: Settings },\n  ]\n\n  // Add Users nav item only for super admins\n  if (currentUser?.role === 'super_admin') {\n    navItems.splice(3, 0, { href: '/admin/billing/users', label: 'Users', icon: UserCircle })\n  }\n\n  return (\n    <NotificationProvider>\n      <CloudSyncProvider userId={currentUser?.id}>\n        <div className=\"min-h-screen bg-gray-200 dark:bg-gray-900\">\n      {/* Header */}\n      <header className=\"bg-gray-100 dark:bg-gray-800 border-b border-gray-300 dark:border-gray-700\">\n        <div className=\"px-4 md:px-8 py-4\">\n          <div className=\"flex items-center justify-between gap-2 md:gap-8\">\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setShowMobileMenu(!showMobileMenu)}\n              className=\"lg:hidden p-2 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg\"\n            >\n              {showMobileMenu ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n            </button>\n\n            <div className=\"flex items-center space-x-3 shrink-0\">\n              <Link href=\"/admin/billing\">\n                <Image\n                  src=\"https://nexasync.ca/images/NexaSync-White.png\"\n                  alt=\"NexaSync Logo\"\n                  width={220}\n                  height={60}\n                  className=\"h-8 md:h-12 w-auto\"\n                  priority\n                />\n              </Link>\n            </div>\n\n            {/* AI News Ticker - Hidden on mobile */}\n            <div className=\"hidden md:flex flex-1 min-w-0\">\n              <NewsTicker />\n            </div>\n\n            <div className=\"flex items-center space-x-2 md:space-x-4 shrink-0\">\n              {/* Profile Menu */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowProfileMenu(!showProfileMenu)}\n                  className=\"flex items-center gap-3 px-4 py-2 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n                >\n                  <div className=\"text-right\">\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\n                      {currentUser?.full_name || 'Loading...'}\n                    </p>\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      {currentUser?.role === 'super_admin' ? 'Super Admin' : 'Admin'}\n                    </p>\n                  </div>\n                  <ChevronDown className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\n                </button>\n\n                {/* Dropdown Menu */}\n                {showProfileMenu && (\n                  <div className=\"absolute right-0 mt-2 w-64 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-lg border border-gray-300 dark:border-gray-700 py-2 z-50\">\n                    <div className=\"px-4 py-3 border-b border-gray-300 dark:border-gray-700\">\n                      <p className=\"text-sm font-semibold text-gray-900 dark:text-gray-100\">\n                        {currentUser?.full_name}\n                      </p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\n                        {currentUser?.email}\n                      </p>\n                      {currentUser?.mfa_enabled && (\n                        <div className=\"flex items-center gap-1 mt-2\">\n                          <Shield className=\"w-3 h-3 text-green-600 dark:text-green-400\" />\n                          <span className=\"text-xs text-green-600 dark:text-green-400\">MFA Enabled</span>\n                        </div>\n                      )}\n                    </div>\n\n                    <Link\n                      href=\"/admin/billing/profile\"\n                      onClick={() => setShowProfileMenu(false)}\n                      className=\"flex items-center gap-3 px-4 py-3 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n                    >\n                      <UserCircle className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\n                      <span className=\"text-sm text-gray-900 dark:text-gray-100\">My Profile</span>\n                    </Link>\n\n                    <button\n                      onClick={() => {\n                        setShowProfileMenu(false)\n                        handleLogout()\n                      }}\n                      className=\"w-full flex items-center gap-3 px-4 py-3 hover:bg-red-50 dark:hover:bg-red-900/30 transition-colors text-left\"\n                    >\n                      <LogOut className=\"w-4 h-4 text-red-600 dark:text-red-400\" />\n                      <span className=\"text-sm text-red-600 dark:text-red-400\">Logout</span>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"flex flex-col lg:flex-row\">\n        {/* Mobile Menu Overlay */}\n        {showMobileMenu && (\n          <div\n            className=\"fixed inset-0 bg-black/50 z-40 lg:hidden\"\n            onClick={() => setShowMobileMenu(false)}\n          />\n        )}\n\n        {/* Sidebar - Desktop and Mobile Drawer */}\n        <aside className={`\n          ${showMobileMenu ? 'translate-x-0' : '-translate-x-full'}\n          lg:translate-x-0\n          fixed lg:static\n          inset-y-0 left-0\n          w-64\n          bg-gray-100 dark:bg-gray-800\n          border-r border-gray-300 dark:border-gray-700\n          min-h-[calc(100vh-73px)] lg:min-h-[calc(100vh-73px)]\n          transition-transform duration-300 ease-in-out\n          z-50 lg:z-0\n          overflow-y-auto\n        `}>\n          <nav className=\"p-4 space-y-1\">\n            {navItems.map((item) => {\n              const isActive = pathname === item.href ||\n                (item.href !== '/admin/billing' && pathname?.startsWith(item.href))\n              const Icon = item.icon\n\n              return (\n                <Link\n                  key={item.href}\n                  href={item.href}\n                  onClick={() => setShowMobileMenu(false)}\n                  className={`flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors ${\n                    isActive\n                      ? 'bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-400 font-medium'\n                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n                  }`}\n                >\n                  <Icon className=\"w-5 h-5\" />\n                  <span>{item.label}</span>\n                </Link>\n              )\n            })}\n          </nav>\n\n          <div className=\"p-4 mt-8\">\n            <div className=\"bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg p-4\">\n              <p className=\"text-xs font-semibold text-blue-900 dark:text-blue-300 mb-2\">Security Notice</p>\n              <p className=\"text-xs text-blue-800 dark:text-blue-400\">\n                This platform handles billing data only. No PHI or HIPAA protected information is stored or processed.\n              </p>\n            </div>\n          </div>\n        </aside>\n\n        {/* Main Content */}\n        <main className=\"flex-1 w-full lg:w-auto\">\n          {children}\n        </main>\n      </div>\n    </div>\n      </CloudSyncProvider>\n    </NotificationProvider>\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC;;;;;AAID;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAXA;;;;;;;;;;;AAae,SAAS,cAAc,EACpC,QAAQ,EAGT;IACC,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAqB;IACnE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iNAAQ,EAAC;IAErD,IAAA,kNAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,eAAe;QACb,IAAI;YACF,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,2HAAQ,CAAC,IAAI,CAAC,OAAO;YACtD,IAAI,CAAC,MAAM;gBACT,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,MAAM,EAAE,MAAM,WAAW,EAAE,GAAG,MAAM,2HAAQ,CACzC,IAAI,CAAC,iBACL,MAAM,CAAC,KACP,EAAE,CAAC,gBAAgB,KAAK,EAAE,EAC1B,MAAM;YAET,IAAI,aAAa;gBACf,eAAe;gBAEf,yBAAyB;gBACzB,IAAI,YAAY,WAAW,EAAE;oBAC3B,MAAM,cAAc,eAAe,OAAO,CAAC;oBAC3C,IAAI,gBAAgB,QAAQ;wBAC1B,mDAAmD;wBACnD,MAAM,2HAAQ,CAAC,IAAI,CAAC,OAAO;wBAC3B,eAAe,KAAK;wBACpB,OAAO,IAAI,CAAC;wBACZ;oBACF;gBACF;YACF,OAAO;gBACL,OAAO,IAAI,CAAC;YACd;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,OAAO,IAAI,CAAC;QACd;IACF;IAEA,eAAe;QACb,IAAI;YACF,MAAM,2HAAQ,CAAC,IAAI,CAAC,OAAO;YAC3B,eAAe,KAAK;YACpB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;QACjC;IACF;IAEA,MAAM,WAAW;QACf;YAAE,MAAM;YAAkB,OAAO;YAAa,MAAM,+OAAe;QAAC;QACpE;YAAE,MAAM;YAA4B,OAAO;YAAa,MAAM,6MAAK;QAAC;QACpE;YAAE,MAAM;YAA2B,OAAO;YAAY,MAAM,0NAAQ;QAAC;QACrE;YAAE,MAAM;YAA2B,OAAO;YAAY,MAAM,sNAAQ;QAAC;KACtE;IAED,2CAA2C;IAC3C,IAAI,aAAa,SAAS,eAAe;QACvC,SAAS,MAAM,CAAC,GAAG,GAAG;YAAE,MAAM;YAAwB,OAAO;YAAS,MAAM,gOAAU;QAAC;IACzF;IAEA,qBACE,8OAAC,yJAAoB;kBACnB,cAAA,8OAAC,kKAAiB;YAAC,QAAQ,aAAa;sBACtC,cAAA,8OAAC;gBAAI,WAAU;;kCAEjB,8OAAC;wBAAO,WAAU;kCAChB,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC;wCACC,SAAS,IAAM,kBAAkB,CAAC;wCAClC,WAAU;kDAET,+BAAiB,8OAAC,iMAAC;4CAAC,WAAU;;;;;iEAAe,8OAAC,0MAAI;4CAAC,WAAU;;;;;;;;;;;kDAGhE,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,uKAAI;4CAAC,MAAK;sDACT,cAAA,8OAAC,wIAAK;gDACJ,KAAI;gDACJ,KAAI;gDACJ,OAAO;gDACP,QAAQ;gDACR,WAAU;gDACV,QAAQ;;;;;;;;;;;;;;;;kDAMd,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,6IAAU;;;;;;;;;;kDAGb,8OAAC;wCAAI,WAAU;kDAEb,cAAA,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,SAAS,IAAM,mBAAmB,CAAC;oDACnC,WAAU;;sEAEV,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAE,WAAU;8EACV,aAAa,aAAa;;;;;;8EAE7B,8OAAC;oEAAE,WAAU;8EACV,aAAa,SAAS,gBAAgB,gBAAgB;;;;;;;;;;;;sEAG3D,8OAAC,mOAAW;4DAAC,WAAU;;;;;;;;;;;;gDAIxB,iCACC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAE,WAAU;8EACV,aAAa;;;;;;8EAEhB,8OAAC;oEAAE,WAAU;8EACV,aAAa;;;;;;gEAEf,aAAa,6BACZ,8OAAC;oEAAI,WAAU;;sFACb,8OAAC,gNAAM;4EAAC,WAAU;;;;;;sFAClB,8OAAC;4EAAK,WAAU;sFAA6C;;;;;;;;;;;;;;;;;;sEAKnE,8OAAC,uKAAI;4DACH,MAAK;4DACL,SAAS,IAAM,mBAAmB;4DAClC,WAAU;;8EAEV,8OAAC,gOAAU;oEAAC,WAAU;;;;;;8EACtB,8OAAC;oEAAK,WAAU;8EAA2C;;;;;;;;;;;;sEAG7D,8OAAC;4DACC,SAAS;gEACP,mBAAmB;gEACnB;4DACF;4DACA,WAAU;;8EAEV,8OAAC,oNAAM;oEAAC,WAAU;;;;;;8EAClB,8OAAC;oEAAK,WAAU;8EAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAUzE,8OAAC;wBAAI,WAAU;;4BAEZ,gCACC,8OAAC;gCACC,WAAU;gCACV,SAAS,IAAM,kBAAkB;;;;;;0CAKrC,8OAAC;gCAAM,WAAW,CAAC;UACjB,EAAE,iBAAiB,kBAAkB,oBAAoB;;;;;;;;;;;QAW3D,CAAC;;kDACC,8OAAC;wCAAI,WAAU;kDACZ,SAAS,GAAG,CAAC,CAAC;4CACb,MAAM,WAAW,aAAa,KAAK,IAAI,IACpC,KAAK,IAAI,KAAK,oBAAoB,UAAU,WAAW,KAAK,IAAI;4CACnE,MAAM,OAAO,KAAK,IAAI;4CAEtB,qBACE,8OAAC,uKAAI;gDAEH,MAAM,KAAK,IAAI;gDACf,SAAS,IAAM,kBAAkB;gDACjC,WAAW,CAAC,mEAAmE,EAC7E,WACI,gFACA,4EACJ;;kEAEF,8OAAC;wDAAK,WAAU;;;;;;kEAChB,8OAAC;kEAAM,KAAK,KAAK;;;;;;;+CAVZ,KAAK,IAAI;;;;;wCAapB;;;;;;kDAGF,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAE,WAAU;8DAA8D;;;;;;8DAC3E,8OAAC;oDAAE,WAAU;8DAA2C;;;;;;;;;;;;;;;;;;;;;;;0CAQ9D,8OAAC;gCAAK,WAAU;0CACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}}]
}